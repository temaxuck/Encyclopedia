from sympy import *
from math import *
from encyclopedia.modules.SpecialFunc import *
n,m,k=symbols('n m k')
#----------------------------------------------------------------------------
def  Tuu0001(n,m,k) :
    return( kron_delta(k,n+m)*binomial(n+m,m)  )
#----------------------------------------------------------------------------
def  Tuu0002(n,m,k) :
    return( kron_delta(k,n)*binomial(n,m)  )
#----------------------------------------------------------------------------
def  Tuu0003(n,m,k) :
    return( kron_delta(k,m)*binomial(m,n)  )
#----------------------------------------------------------------------------
def  Tuu0004(n,m,k) :
    return( binomial(k,m)*binomial(m,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0005(n,m,k) :
    return( binomial(k,m)*binomial(n+2*m-k-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0006(n,m,k) :
    return( binomial(k,n)*binomial(2*n+m-k-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0007(n,m,k) :
    return( binomial(k,m)*binomial(k,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0008(n,m,k) :
    return( binomial(k,n)*binomial(k,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0009(n,m,k) :
    return( binomial(k,m)*binomial(k-m,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0010(n,m,k) :
    return( binomial(k,m)*binomial(k,n)  )
#----------------------------------------------------------------------------
def  Tuu0011(n,m,k) :
    return( (k*binomial(m+k,m)*binomial(m+k,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0012(n,m,k) :
    return( (k*binomial(n+k,m)*binomial(n+k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0013(n,m,k) :
    return( (k*binomial(2*m+k,m)*binomial(2*m+k,n))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0014(n,m,k) :
    return( (k*binomial(n+m+k,m)*binomial(n+m+k,n))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0015(n,m,k) :
    return( binomial(m+k-1,m)*(-1)**(n+m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0016(n,m,k) :
    return( (k*binomial(2*n+k,m)*binomial(2*n+k,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0017(n,m,k) :
    return( binomial(k,n)*binomial(m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0018(n,m,k) :
    return( (k*binomial(m+k,n)*binomial(2*m+k-1,m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0019(n,m,k) :
    return( binomial(n+k-1,n)*binomial(n+m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0020(n,m,k) :
    return( (k*binomial(n+m,m)*binomial(2*n+2*m+k-1,n+m))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0021(n,m,k) :
    return( (k*binomial(n+m+k,n)*binomial(n+2*m+k-1,m))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0022(n,m,k) :
    return( (k*binomial(2*n+k,n)*binomial(2*n+m+k-1,m))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0023(n,m,k) :
    return( binomial(k,m)*binomial(k,n-m)  )
#----------------------------------------------------------------------------
def  Tuu0024(n,m,k) :
    return( (k*binomial(m+k,m)*binomial(m+k,n-m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0025(n,m,k) :
    return( (k*binomial(n+k,m)*binomial(n+k,n-m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0026(n,m,k) :
    return( (k*binomial(2*m+k,m)*binomial(2*m+k,n-m))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0027(n,m,k) :
    return( (k*binomial(n+m,n)*binomial(2*n+2*m+2*k,n+m))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0028(n,m,k) :
    return( binomial(k,n-m)*binomial(m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0029(n,m,k) :
    return( (k*binomial(m+k,n-m)*binomial(2*m+k-1,m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0030(n,m,k) :
    return( (k*binomial(n+k,n-m)*binomial(n+m+k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0031(n,m,k) :
    return( binomial(k,m)*binomial(n+2*m+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0032(n,m,k) :
    return( (k*binomial(m+k,m)*binomial(n+3*m+k-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0033(n,m,k) :
    return( (k*binomial(2*m+k,m)*binomial(n+4*m+k-1,n))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0034(n,m,k) :
    return( binomial(k,n+m)*binomial(n+m,n)  )
#----------------------------------------------------------------------------
def  Tuu0035(n,m,k) :
    return( binomial(k,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0036(n,m,k) :
    return( (k*binomial(n+k,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0037(n,m,k) :
    return( binomial(k,n)*binomial(n,m)  )
#----------------------------------------------------------------------------
def  Tuu0038(n,m,k) :
    return( binomial(n+k-1,m)*binomial(n-m+k-1,k-1)  )
#----------------------------------------------------------------------------
def  Tuu0039(n,m,k) :
    return( (k*binomial(2*n+k-1,m)*binomial(2*n-m+k-1,n+k-1))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0040(n,m,k) :
    if m==0 and n==0:
        return 1
    return( (k*binomial((-n)+k-1,n+m-1)*binomial(n+m,m))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0041(n,m,k) :
  if  m==0 and n==0  :
      return( 1  )
  else:
      return( (k*binomial(k-n-1,n+m-1)*binomial(n+m,m))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0042(n,m,k) :
    return( binomial(n+k-1,n)*binomial(n+2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0043(n,m,k) :
    return( binomial(k,m)*binomial(n-m+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0044(n,m,k) :
    return( binomial(m+k-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0045(n,m,k) :
    return( (k*binomial(n+k,m)*binomial(2*n-m+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0046(n,m,k) :
    return( (k*binomial(2*m+k,m)*binomial(n+m+k-1,n))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0047(n,m,k) :
    return( (k*binomial(n+m+k,m)*binomial(2*n+k-1,n))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0048(n,m,k) :
    return( binomial(m+k-1,m)*binomial(n+2*m+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0049(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(n+3*m+k-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0050(n,m,k) :
    return( binomial(k,n)*binomial((-n)+m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0051(n,m,k) :
    return( (k*binomial(m+k,n)*binomial((-n)+2*m+k-1,m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0052(n,m,k) :
    return( binomial(k,m)*binomial(n+m+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0053(n,m,k) :
  if  m==0  :
      return( binomial(n+k-1,n)  )
  else:
      return( binomial(n+k-1,n)*k*binomial(k-m-1,m-1)/m  )
#----------------------------------------------------------------------------
def  Tuu0054(n,m,k) :
  if  m==0  :
      return( k/(n+k)*binomial(2*n+k-1,n)  )
  else:
      return( (k*(binomial(n-m+k-1,m-1))*(binomial(2*n+k-1,n)))/m  )
#----------------------------------------------------------------------------
def  Tuu0055(n,m,k) :
    return( binomial(k,m)*binomial(n-2*m+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0056(n,m,k) :
    return( binomial(m+k-1,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0057(n,m,k) :
    return( (k*binomial(2*m+k,m)*binomial(n+2*m+2*k-1,n))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0058(n,m,k) :
    return( binomial(k,m)*binomial(2*k-2*m,n)  )
#----------------------------------------------------------------------------
def  Tuu0059(n,m,k) :
    return( (k*binomial(2*k,n)*binomial(m+k,m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0060(n,m,k) :
    return( (k*binomial(n+k,m)*binomial(2*n-2*m+2*k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0061(n,m,k) :
    return( (k*binomial(2*m+k,m)*binomial(2*m+2*k,n))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0062(n,m,k) :
    return( (k*binomial(k,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0063(n,m,k) :
    return( (k*binomial(m+k,m)*binomial(2*n+m+k-1,n))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0064(n,m,k) :
    return( (k*binomial(2*m+k,m)*binomial(2*n+2*m+k-1,n))/(n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0065(n,m,k) :
    return( (k*binomial(k,n)*binomial(2*m+k-1,m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0066(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
    if  k==0  :
        return( 0  )
    else:
        return( (k*(binomial(n+k,n))*(binomial(n+2*m+k-1,m)))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0067(n,m,k) :
  if  n==0 and m==0 and k==0  :
      return( 1  )
  else:
    if  k==0  :
        return( 0  )
    else:
        return( (k*(binomial(2*n+k,n))*(binomial(2*n+2*m+k-1,m)))/(2*n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0068(n,m,k) :
    return( (k*binomial(m+k-1,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0069(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(2*n+m+k-1,n))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0070(n,m,k) :
    return( binomial(n+k-1,n)*binomial(2*n+m+2*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0071(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(4*n+m+2*k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0072(n,m,k) :
    return( binomial(k,n)*binomial(m+2*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0073(n,m,k) :
    if n==0:
        return (binomial(m+2*k-1,m))
    return( (k*binomial((-2*n)+m+2*k-1,m)*binomial((-n)+k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0074(n,m,k) :
    return( binomial(k,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0075(n,m,k) :
    if m==0:
        return binomial(n+2*k-1,n)
    return( (k*binomial((-m)+k-1,m-1)*binomial(n-2*m+2*k-1,n))/m  )
#----------------------------------------------------------------------------
def  Tuu0076(n,m,k) :
    return( binomial(m+k-1,m)*binomial(n+2*(m+k)-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0077(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(n+2*(2*m+k)-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0078(n,m,k) :
    return( binomial(k,m)*binomial(2*k,n)  )
#----------------------------------------------------------------------------
def  Tuu0079(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( k/m*binomial(2*m-k-1,m-1)*(-1)**(m-1)  )
  else:
      return( (2*k*(binomial(k-m,m))*(binomial(2*(k-m)-1,n-1)))/(n)  )
#----------------------------------------------------------------------------
def  Tuu0080(n,m,k) :
    return( binomial(m+k-1,m)*binomial(2*(m+k),n)  )
#----------------------------------------------------------------------------
def  Tuu0081(n,m,k) :
    return( (k*binomial(n+k,m)*binomial(2*(n+k),n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0082(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(2*(2*m+k),n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0083(n,m,k) :
  if  n==0  :
      return( binomial(k,m)  )
  else:
      return( k/n*binomial(2*n-k-1,n-1)*(-1)**(n-1)*binomial(k,m)  )
#----------------------------------------------------------------------------
def  Tuu0084(n,m,k) :
  if  n==0  :
      return( binomial((m+k-1),m)  )
  else:
      return( (m+k)/n*binomial(2*n-(m+k)-1,n-1)*(-1)**(n-1)*binomial((m+k-1),m)  )
#----------------------------------------------------------------------------
def  Tuu0085(n,m,k) :
    if n==0:
        return binomial((2*m+k-1),m)*k/(m+k)
    return( (k*(2*m+k)*binomial(2*m+k-1,m)*(-1)**(n-1)*binomial(2*n-2*m-k-1,n-1))/((m+k)*n)  )
#----------------------------------------------------------------------------
def  Tuu0086(n,m,k) :
    return( binomial(k,m)*4**n*binomial(n+k/2-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0087(n,m,k) :
    return( binomial(m+k-1,m)*4**n*binomial(n+(m+k)/2-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0088(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*4**n*binomial(n+(2*m+k)/2-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0089(n,m,k) :
  if  n==0 and m==0  :
      return( 0  )
  else:
      return( binomial(n+m,m)*k/(n+m)*binomial(2*n+2*m-k-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0090(n,m,k) :
  if  n==0 and m==0  :
      return( 0  )
  else:
      return( binomial(n+m,m)*binomial(n+m-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0091(n,m,k) :
    return( binomial(n+m,m)*binomial(n+m+k-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0092(n,m,k) :
    return( binomial(k,n+m-k)*binomial(n+m,m)  )
#----------------------------------------------------------------------------
def  Tuu0093(n,m,k) :
  if  n==0 and m==0  :
      return( 0  )
  else:
      return( binomial(n+m,m)*k/(n+m)*binomial(2*n+2*m,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0094(n,m,k) :
    return( 4**(n+m-k)*binomial(n+m,m)*binomial(n+m-k/2-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0095(n,m,k) :
    return( binomial(n+m,m)*binomial(n+m+2*k-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0096(n,m,k) :
    return( 9**(n+m-k)*binomial(n+m,m)*binomial(n+m-(2*k)/3-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0097(n,m,k) :
    return( 4**(n+m)*binomial(n+m,n)*binomial(n+m+k/2-1,n+m)  )
#----------------------------------------------------------------------------
def  Tuu0098(n,m,k) :
    return( binomial(n+m,n)*binomial(n+m+2*k-1,n+m)  )
#----------------------------------------------------------------------------
def  Tuu0099(n,m,k) :
    return( 2**(n-1)*((-1)**n+1)*binomial(int((n+k-2)/2),int(n/2))*binomial(n+m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0100(n,m,k) :
    return( 2**(m-1)*((-1)**m+1)*binomial(int((m+k-2)/2),int(m/2))*binomial(n+m+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0101(n,m,k) :
    return( 4**n*binomial(int((2*n+k-2)/2),n)*binomial(2*n+m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0102(n,m,k) :
    return( 4**m*binomial(int((2*m+k-2)/2),m)*binomial(n+2*m+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0103(n,m,k) :
    return( (k*4**m*binomial(int((m+k)/2),int((k-m)/2))*binomial(n+m+k-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0104(n,m,k) :
    return( (k*4**n*binomial(int((n+k)/2),int((k-n)/2))*binomial(n+m+k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0105(n,m,k) :
    return( (2*k*binomial(n+m+2*k,m)*binomial(n+m+2*k,m+2*k))/(n+m+2*k)  )
#----------------------------------------------------------------------------
def  Tuu0106(n,m,k) :
    return( (2*k*binomial(n+m-1,n)*binomial(n+m+2*k,m))/(n+m+2*k)  )
#----------------------------------------------------------------------------
def  Tuu0107(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
      return( (k*(binomial(m+k-1,k))*(binomial(n+m,m)))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0108(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
      return( k*binomial(2*m+k-1,m+k)*binomial(n+m,m)/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0109(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
      return( (k*(binomial(n+m-1,m-1))*(binomial(n+m+k,m)))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0110(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
      return( (k*(binomial(n+m-1,n-1))*(binomial(n+m+k,n)))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0111(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
      return( k*(binomial(n+m,m)*binomial(n+2*m+k-1,m-1))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0112(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
      return( (k*(binomial(n+m,n))*(binomial(2*n+m+k-1,n-1)))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0113(n,m,k) :
  if  m==0 and n==0  :
      return( 1  )
  else:
      return( (k*(binomial(n+k-1,k))*(binomial(n+m,n)))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0114(n,m,k) :
  if  m==0 and n==0  :
      return( 1  )
  else:
      return( (k*(binomial(n+m,n))*(binomial(2*n+k-1,n+k)))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0115(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
      return( (2*k*(binomial(n+m,n))*(binomial(2*n+m+2*k-1,n-1)))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0116(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
      return( 2*k*binomial(n+m,m)*binomial(n+m+2*k-1,m+2*k)/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0117(n,m,k) :
    return( binomial(k,m)*binomial((k-m)/2,n)*4**n  )
#----------------------------------------------------------------------------
def  Tuu0118(n,m,k) :
    return( binomial(k,n)*4**m*binomial((k-n)/2,m)  )
#----------------------------------------------------------------------------
def  Tuu0119(n,m,k) :
    return( binomial(k/2,n)*binomial(m+k-1,m)*4**n  )
#----------------------------------------------------------------------------
def  Tuu0120(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
      return( (k*4**n*(binomial(n+k,m))*(binomial((n-m+k)/2,n)))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0121(n,m,k) :
    return( (k*binomial((m+k)/2,n)*binomial(2*m+k-1,m)*4**n)/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0122(n,m,k) :
    return( binomial(m+k/2-1,m)*4**(n+m)*binomial(n+k/2-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0123(n,m,k) :
  if  m==0 and n==0  :
      return( 1  )
  else:
    if  m==0 or n==0  :
        return( 0  )
    else:
        return( (k*(-1)*(binomial(n-k-1,m-1))*(binomial(n-1,n-m)))/m  )
#----------------------------------------------------------------------------
def  Tuu0124(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
    if  m==0  :
        return( 0  )
    else:
        return( (k*(binomial(2*m-k-1,m-1))*(-1)*(binomial(n+m-1,n)))/m  )
#----------------------------------------------------------------------------
def  Tuu0125(n,m,k) :
    return( binomial(k,n-m+k)*4**n*binomial((n-m+k)/2,n)  )
#----------------------------------------------------------------------------
def  Tuu0126(n,m,k) :
    return( (k*binomial(m+k,n+k)*4**n*binomial((n+k)/2,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0127(n,m,k) :
    return( (k*4**n*binomial(n+k,2*n-m+k)*binomial((2*n-m+k)/2,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0128Odd(n,m,k) :
  if  n<m  :
      return( 0  )
  else:
      return( int(binomial(n-m+k, k)*binomial(2*(n-m+k),n-m+k)/binomial(2*k,k))  )
#----------------------------------------------------------------------------
def  Tuu0128Even(n,m,k) :
  if  n<m  :
      return( 0  )
  else:
      return( 4**(n-m)*binomial(n-m+k,k)  )
#----------------------------------------------------------------------------
def  Tuu0128(n,m,k) :
  if  oddp(k)  :
      return( (k*binomial(n+k,2*(n+k)-2*m-k)*Tuu0128Odd(n,m,int((k+1)/2)))  )
  else:
      return( int((k*binomial(n+k,2*(n+k)-2*m-k)*Tuu0128Even(n,m,int(k/2)))/(n+k))  )
#----------------------------------------------------------------------------
def  Tuu0129Even(n,m,k) :
  if  n==0 and m==0 and k==0  :
      return( 1  )
  else:
    if  k==0  :
        return( 0  )
    else:
        return( (binomial(m+k,k-1)*binomial(n+2*k-1,k-1)*binomial(n-m+k-1,k-1)*binomial(2*n+2*k,2*m+1))/(2*binomial(2*k-2,k-1)*binomial(2*m+2*k,2*k-2))  )
#----------------------------------------------------------------------------
def  Tuu0129Odd(n,m,k) :
    return( binomial(n+k,m)*binomial(n+k,m+k)*binomial(n+2*k,k)/binomial(2*k,k)  )
#----------------------------------------------------------------------------
def  Tuu0129(n,m,k) :
  if  k==0 and m==0 and n==0  :
      return( 1  )
  else:
    if  k==0  :
        return( 0  )
    else:
      if  oddp(k)  :
          return( (Tuu0129Odd(n,m,int((k-1)/2)))  )
      else:
          return( (Tuu0129Even(n,m,int(k/2)))  )
#----------------------------------------------------------------------------
def  Tuu0130(n,m,k) :
  if  n==0 and m==0 and k==0  :
      return( 1  )
  else:
    if  k==0  :
        return( 0  )
    else:
        return( ((binomial(m+k,k-1))*(binomial(n+k-1,k-1)) *(binomial(n+m+2*k-1,k-1))*(binomial(2*(n+m)+2*k,2*m+1)))/(2*(binomial(2*k-2,k-1))*(binomial(2*m+2*k,2*k-2)))  )
#----------------------------------------------------------------------------
def  Tuu0131(n,m,k) :
  if  n==0 and m==0 and k==0  :
      return( 1  )
  else:
    if  k==0  :
        return( 0  )
    else:
      if  m>n  :
          return( 0  )
      else:
          return( (k*binomial(2*m+2*k,2*m)*binomial(n,m)*binomial(n+k,m)*binomial(2*n+2*k,n))/(binomial(m+k,k)*(n+k)*binomial(2*n+2*k,2*m))  )
#----------------------------------------------------------------------------
def  Tuu0132Odd(n,m,k) :
  if  n<m  :
      return( 0  )
  else:
      #((2*k+1)*(binomial(2*n+2*k,n-m))*(binomial(n+m+2*k+1,m)))/((binomial(n+k,m))*(n+m+2*k+1))*(binomial(m+k,k));
      return( int(((2*k+1)*(binomial(2*n+2*k,n-m))*(binomial(n+m+2*k+1,m)))/((binomial(n+k,m))*(n+m+2*k+1))*(binomial(m+k,k)))  )
#----------------------------------------------------------------------------
def  Tuu0132Even(n,m,k) :
  if  m>n  :
      return( 0  )
  else:
      return( int((k*(binomial(2*m+2*k,2*m))*(binomial(n,m))*(binomial(n+k,m))*(binomial(2*n+2*k,n)))/((binomial(m+k,k))*(n+k)*(binomial(2*n+2*k,2*m))))  )
#----------------------------------------------------------------------------
def  Tuu0132(n,m,k) :
  if  k==0 and m==0 and n==0  :
      return( 1  )
  else:
    if  k==0  :
        return( 0  )
    else:
      if  oddp(k)  :
          return( (Tuu0132Odd(n,m,int((k-1)/2)))  )
      else:
          return( (Tuu0132Even(n,m,int(k/2)))  )
#----------------------------------------------------------------------------
def  Tuu0133(n,m,k) :
    return( kron_delta(2*k,n+m)*binomial(n+m,m)  )
#----------------------------------------------------------------------------
def  Tuu0134(n,m,k) :
    return( kron_delta(3*k,n+m)*binomial(n+m,m)  )
#----------------------------------------------------------------------------
def  Tuu0135(n,m,k) :
    return( kron_delta(4*k,n+m)*binomial(n+m,m)  )
#----------------------------------------------------------------------------
def  Tuu0136(n,m,k) :
    return( (k*(-1)**(n+m)*binomial(n+m+k,m)*binomial(2*n+2*k,n))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0137(n,m,k) :
    return( (k*(-1)**(n+m)*binomial(n+2*m+k,m)*binomial(2*n+2*(m+k),n))/(n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0138(n,m,k) :
    return( (k*binomial(n+2*m+k,m)*binomial(2*n+2*(m+k),n))/(n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0139(n,m,k) :
    return( (k*binomial(n+m+k,m)*binomial(2*n+2*k,n))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0140(n,m,k) :
    return( (k*(-1)**(n+m)*binomial(n+m+k-1,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0141(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*(-1)**(n+m)*binomial(n+m+k-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0142(n,m,k) :
    return( binomial(k,n)*binomial((-n)+m+k-1,m)*(-1)**(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0143(n,m,k) :
  if  n==0  :
      return( binomial(m+k-1,m)  )
  else:
      return( k/n*binomial(2*n-k-1,n-1)*(-1)**(n-1)*binomial(m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0144(n,m,k) :
  if  n==0  :
      return( k/(m+k)*binomial(2*m+k-1,m)  )
  else:
      return( k/n*binomial(2*n-m-k-1,n-1)*(-1)**(n-1)*binomial(2*m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0145(n,m,k) :
    return( binomial(k,n)*binomial(n+k,m)  )
#----------------------------------------------------------------------------
def  Tuu0146(n,m,k) :
    return( binomial(n+k-1,n)*binomial(2*n+k,m)  )
#----------------------------------------------------------------------------
def  Tuu0147(n,m,k) :
    return( binomial(2*n,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0148(n,m,k) :
    return( binomial(k,n)*binomial(2*n,m)  )
#----------------------------------------------------------------------------
def  Tuu0149(n,m,k) :
    return( (k*binomial(m+k,n)*binomial(2*n,m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0150(n,m,k) :
  if  m+n<k or m+n==0  :
      return( 0  )
  else:
      return( k/(m+n)*binomial(m+n,n)*binomial(2*n,m+n-k)  )
#----------------------------------------------------------------------------
def  Tuu0151(n,m,k) :
    return( (k*binomial(2*n,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0152(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
    if  n==0  :
        return( 0  )
    else:
      if  n+k==m  :
          return( k/n*(binomial(2*n,n-k))*(-1)**(n-1)  )
      else:
          return( (k*(binomial(2*n,m))*(binomial(n-m+k,n)))/(n-m+k)  )
#----------------------------------------------------------------------------
def  Tuu0153(n,m,k) :
    return( binomial(k,n)*binomial(3*n,m)  )
#----------------------------------------------------------------------------
def  Tuu0154(n,m,k) :
    return( (k*binomial(3*n,m)*binomial(n+k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0155(n,m,k) :
    return( (k*binomial(3*n,m)*binomial(2*n+k,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0156(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
    if  n==0  :
        return( 0  )
    else:
        return( k/n*binomial(2*n-k-1,n-1)*(-1)**(n-1)*binomial(3*(n),m)  )
#----------------------------------------------------------------------------
def  Tuu0157(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
    if  n==0  :
        return( 0  )
    else:
        return( k/n*binomial(2*n-k-1,n-1)*(-1)**(n-1)*binomial(2*(n),m)  )
#----------------------------------------------------------------------------
def  Tuu0158(n,m,k) :
    return( binomial(k,m)*binomial(n+2*m-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0159(n,m,k) :
    return( binomial(m+k-1,m)*binomial(n+2*m-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0160(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(n+2*m-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0161(n,m,k) :
  if  m==0 and n==0  :
      return( 1  )
  else:
    if  m==0  :
        return( 0  )
    else:
        return( (k/m*(binomial(2*m-k-1,m-1)*(-1)**(m-1))*(binomial(n+2*(m)-1,n)))  )
#----------------------------------------------------------------------------
def  Tuu0162(n,m,k) :
    return( binomial(k,m)*binomial(n+3*m-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0163(n,m,k) :
    return( binomial(m+k-1,m)*binomial(n+3*m-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0164(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(n+3*m-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0165(n,m,k) :
  if  m==0 and n==0  :
      return( 1  )
  else:
    if  m==0  :
        return( 0  )
    else:
        return( k/m*((binomial(2*m-k-1,m-1))*(-1)**(m-1))*(binomial(n+3*m-1,n))  )
#----------------------------------------------------------------------------
def  Tuu0166(n,m,k) :
    return( binomial(k,m)*binomial(m+k,n)  )
#----------------------------------------------------------------------------
def  Tuu0167(n,m,k) :
    return( binomial(m+k-1,m)*binomial(2*m+k,n)  )
#----------------------------------------------------------------------------
def  Tuu0168(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(3*m+k,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0169(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( (k*(binomial(k,n))*(binomial(2*m-k-1,m-1)))/(m)*(-1)**(m-1)  )
#----------------------------------------------------------------------------
def  Tuu0170(n,m,k) :
    return( (k*binomial(n+k,m)*binomial(n+m+k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0171(n,m,k) :
    return( binomial(m+k-1,m)*binomial(n+m+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0172(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(n+2*(m+k)+m-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0173(n,m,k) :
    return( binomial(k,m)*binomial(n-m+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0174(n,m,k) :
    return( binomial(k,m)*binomial(2*m+k,n)  )
#----------------------------------------------------------------------------
def  Tuu0175(n,m,k) :
    return( (k*binomial(m+k,m)*binomial(3*m+k,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0176(n,m,k) :
    return( (k*binomial(2*m+k,m)*binomial(4*m+k,n))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0177(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( (k*(binomial(2*m-k-1,m-1)*(-1)**(m-1))*(binomial(m+k,n)))/m  )
#----------------------------------------------------------------------------
def  Tuu0178(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( (2*k*(-1)**(n-1)*(binomial(2*n-2*k-1,n-1)))/n  )
  else:
      return( k*binomial(n+m-k-1,m-1)*(-1)**(m-1)*(binomial(2*n+m-2*k,n)*(-1)**n)/m  )
#----------------------------------------------------------------------------
def  Tuu0179(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( (2*k*(-1)**(n-1)*(binomial(2*n-2*k-2*m-1,n-1)))/n  )
  else:
      return( k*binomial(n-k-1,m-1)*(-1)**(m-1)*(binomial(2*n-m-2*k,n)*(-1)**n)/m  )
#----------------------------------------------------------------------------
def  Tuu0180(n,m,k) :
    return( binomial(m+k-1,m)*(-1)**(n-k)*binomial(n+m+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0181(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*(-1)**(n-m-k)*binomial(n+2*(m+k)+m-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0182(n,m,k) :
    return( binomial(k,n+m)*(-1)**(n-m)*binomial(n+m,n)  )
#----------------------------------------------------------------------------
def  Tuu0183(n,m,k) :
    return( (k*binomial(m+k,n+m)*(-1)**(n-m)*binomial(n+m,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0184(n,m,k) :
    return( (k*(-1)**(n-m)*binomial(n+k,n+m)*binomial(n+m,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0185(n,m,k) :
    return( (-1)**(n-m)*binomial(n+k-1,n)*binomial(n+m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0186(n,m,k) :
    return( (k*(-1)**(n-m)*binomial(n+m+k-1,n)*binomial(n+2*m+k-1,m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0187(n,m,k) :
    return( (k*(-1)**(n-m)*binomial(2*n+k-1,n)*binomial(2*n+m+k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0188(n,m,k) :
    return( (k*(-1)**(n-m)*binomial(2*n+m+k-1,n)*binomial(2*n+2*m+k-1,m))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0189(n,m,k) :
    return( binomial(m+k-1,m)*binomial(n-m+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0190(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(n+k-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0191(n,m,k) :
    return( (k*binomial(n+2*m+k-1,m)*binomial(2*n+k-1,n))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0192(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( (binomial(k-1,n))*k*(binomial(n-m-k-1,m-1)*(-1)**(m-1))/(m)  )
#----------------------------------------------------------------------------
def  Tuu0193(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( binomial(2*n-k-1,n-1)*(-1)**(n-1)*k/n  )
  else:
      return( (k*(-1)**(m+n-1)*(binomial(2*n-k,n))*(binomial(2*n-m-k-1,m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0194(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
    if  m==0  :
        return( -binomial(2*n-k-1,n-1)*(-1)**(n-1)*k/n  )
    else:
        return( -(k*(-1)**(m+n-1)*(binomial(2*n-k,n))*(binomial(2*n-m-k-1,m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0195(n,m,k) :
    return( binomial(m+k-1,m)*(-1)**(n-k)*binomial(n-m+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0196(n,m,k) :
    return( binomial(m+k-1,m)*binomial(n-2*m+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0197(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(n-m+k-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0198(n,m,k) :
    return( binomial(k,m)*binomial(3*m-k,n)*(-1)**n  )
#----------------------------------------------------------------------------
def  Tuu0199(n,m,k) :
    return( binomial(k,m)*binomial(2*m-k,n)*(-1)**(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0200(n,m,k) :
    return( binomial(k,m)*binomial(n+2*m-k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0201(n,m,k) :
    return( (k*binomial(m+k,m)*binomial(n+m-k-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0202(n,m,k) :
    return( binomial(k,m)*binomial(4*m-k,n)*(-1)**(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0203(n,m,k) :
    return( (k*binomial(2*m-k-1,n)*binomial(n+k,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0204(n,m,k) :
    return( binomial(k,m)*binomial(n+3*m-k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0205(n,m,k) :
  if  n==0 and m==0 and k==0  :
      return( 1  )
  else:
    if  k==0  :
        return( 0  )
    else:
        return( binomial(n+2*k-1,n)*(k)*binomial(2*(m)+k-1,m)/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0206(n,m,k) :
    return( binomial(m+k-1,m)*binomial(n+2*(k-m)-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0207(n,m,k) :
    return( binomial(k,m)*binomial(n+2*(k-2*m)-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0208(n,m,k) :
    return( binomial(k,m)*binomial(2*k-m,n)  )
#----------------------------------------------------------------------------
def  Tuu0209(n,m,k) :
    return( binomial(m+k-1,m)*binomial(2*(m+k)-m,n)  )
#----------------------------------------------------------------------------
def  Tuu0210(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(3*m+2*k,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0211(n,m,k) :
    return( (binomial(m+(k-1)/2,m)*binomial(2*m+k-1,m+(k-1)/2)*binomial(n+4*m+2*k-1,n))/binomial(k-1,(k-1)/2)  )
#----------------------------------------------------------------------------
def  Tuu0212(n,m,k) :
    return( (binomial(m+(k-1)/2,m)*binomial(2*m+k-1,m+(k-1)/2)*binomial(n+m-1,n))/binomial(k-1,(k-1)/2)  )
#----------------------------------------------------------------------------
def  Tuu0213(n,m,k) :
    return( (binomial(m,n)*binomial(m+(k-1)/2,m)*binomial(2*m+k-1,m+(k-1)/2))/binomial(k-1,(k-1)/2)  )
#----------------------------------------------------------------------------
def  Tuu0214(n,m,k) :
    return( (binomial(2*m,n)*binomial(m+(k-1)/2,m)*binomial(2*m+k-1,m+(k-1)/2))/binomial(k-1,(k-1)/2)  )
#----------------------------------------------------------------------------
def  Tuu0215(n,m,k) :
    return( (binomial(m+(k-1)/2,m)*binomial(2*m+k-1,m+(k-1)/2)*binomial(n+k-1,n))/binomial(k-1,(k-1)/2)  )
#----------------------------------------------------------------------------
def  Tuu0216(n,m,k) :
    return( (k*binomial(n+2*m+k-1,(n+k-1)/2+m)*binomial(2*n+k-1,n)*binomial((n+k-1)/2+m,m))/((n+k)*binomial(n+k-1,(n+k-1)/2))  )
#----------------------------------------------------------------------------
def  Tuu0217(n,m,k) :
    return( (binomial(m+(k-1)/2,m)*binomial(2*m+k-1,m+(k-1)/2)*binomial(n+2*k-1,n))/binomial(k-1,(k-1)/2)  )
#----------------------------------------------------------------------------
def  Tuu0218(n,m,k) :
    return( (k*binomial(m+(k-1)/2,m)*binomial(2*m+k-1,m+(k-1)/2)*binomial(2*n+k-1,n))/(binomial(k-1,(k-1)/2)*(n+k))  )
#----------------------------------------------------------------------------
def  Tuu0219(n,m,k) :
    return( (k*binomial(k,m)*binomial(2*n+2*k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0220(n,m,k) :
    return( (k*binomial(m+k,m)*binomial(2*n+2*(m+k),n))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0221(n,m,k) :
    return( (k*binomial(2*m+k,m)*binomial(2*n+2*(2*m+k),n))/(n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0222(n,m,k) :
    return( (k*binomial(m+k-1,m)*binomial(2*n+2*k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0223(n,m,k) :
  if  n==0  :
      return( binomial(k,m)  )
  else:
      return( 2*((binomial(k-1,m))*k*(binomial(2*n-2*m+2*k-1,n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0224(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(2*n+2*(m+k),n))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0225(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( binomial(k-m-1,m-1)*k/(m)  )
  else:
      return( (2*k*(binomial(-m+k-1,m))*(binomial(2*n-2*m+2*(k-m)-1,n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0226(n,m,k) :
    if n+2*m-k==0:
        if m==0:
            return 1
        else:
            return (0)
    return( int((binomial(k,m)*m*binomial(2*(n+m-k)+2*m,n+m-k))/(n+2*m-k))  )
#----------------------------------------------------------------------------
def  Tuu0227(n,m,k) :
    return( binomial(k,m)*binomial(n+3*m-k-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0228(n,m,k) :
    return( binomial(k,m)*binomial(n+4*m-k-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0229(n,m,k) :
    return( binomial(k,m)*binomial(2*k-m,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0230(n,m,k) :
    return( binomial(k,m)*binomial(m+k,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0231(n,m,k) :
    return( binomial(k,m)*binomial(2*m+k,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0232(n,m,k) :
    return( binomial(k,m)*binomial(m+2*k,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0233(n,m,k) :
    return( binomial(k,m)*binomial(2*m,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0234(n,m,k) :
    return( binomial(k,m)*binomial(3*m,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0235(n,m,k) :
  if  n==0 and m==0 and k==0  :
      return( 1  )
  else:
    if  n==0 and m==0  :
        return( 0  )
    else:
        return( binomial(k,m)*binomial(n+m-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0236(n,m,k) :
    return( binomial(k,m)*binomial(n+m+k-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0237(n,m,k) :
    return( binomial(k,m)*binomial(n+m+2*k-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0238(n,m,k) :
    return( binomial(k,m)*binomial(n+2*m-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0239(n,m,k) :
    return( binomial(k,m)*binomial(n+k-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0240(n,m,k) :
    return( binomial(k,m)*binomial(n-m+2*k-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0241(n,m,k) :
    return( binomial(k,m)*binomial(n+2*k-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0242(n,m,k) :
    return( (kron_delta(k,(n+m)/2)*((-1)**m+1)*binomial(n/2+m/2,n/2)*((-1)**n+1))/4  )
#----------------------------------------------------------------------------
def  Tuu0243(n,m,k) :
  if  n+m<2*k  :
      return( 0  )
  else:
      return( (((-1)**m+1)*(binomial(k,k-m/2))*(binomial(n+m-k-1,n+m-2*k)))/2  )
#----------------------------------------------------------------------------
def  Tuu0244(n,m,k) :
    return( (((-1)**m+1)*binomial(n/2+m/2,n/2)*((-1)**n+1)*binomial((n+m)/2+k-1,(n+m)/2))/4  )
#----------------------------------------------------------------------------
def  Tuu0245(n,m,k) :
  if  n+m<2*k  :
      return( 0  )
  else:
      return( (((-1)**n+1)*(binomial(k,k-n/2))*(binomial(n+m-k-1,n+m-2*k)))/2  )
#----------------------------------------------------------------------------
def  Tuu0246(n,m,k) :
    #if n+m=0 then 1 else if k=0 then 0 else  (k*((-1)^m+1)*(binomial(n/2+m/2,n/2))*((-1)^n+1)*(binomial(n-k-1,(n+m)/2-1)))/(2*(n+m))*(-1)^((n+m)/2+1)
    if n+m==0:
        return 1
    if k==0:
        return 0
    
    return( int((k*((-1)**m+1)*binomial(int(n/2+m/2),int(n/2))*((-1)**n+1)*(-1)**(int((n+m)/2)+1)*binomial(n-k-1,int((n+m)/2)-1))/(2*(n+m)))  )
#----------------------------------------------------------------------------
def  Tuu0247(n,m,k) :
    return( (kron_delta(k,n+m/2)*((-1)**m+1)*binomial(n+m/2,n))/2  )
#----------------------------------------------------------------------------
def  Tuu0248(n,m,k) :
    return( (kron_delta(k,int(n/2)+m)*binomial(int(n/2)+m,m)*((-1)**n+1))/2  )
#----------------------------------------------------------------------------
def  Tuu0249(n,m,k) :
    return( (((-1)**m+1)*binomial(n+m/2,n)*binomial(n+m/2+k-1,n+m/2))/2  )
#----------------------------------------------------------------------------
def  Tuu0250(n,m,k) :
    return( (binomial(n/2+m,m)*binomial(n/2+m+k-1,n/2+m)*((-1)**n+1))/2  )
#----------------------------------------------------------------------------
def  Tuu0251(n,m,k) :
    return( (k*((-1)**m+1)*binomial(n+m/2,n)*binomial(2*n+m/2+k-1,n+m/2))/(2*(n+k))  )
#----------------------------------------------------------------------------
def  Tuu0252(n,m,k) :
    return( (k*binomial(n/2+m,m)*binomial(n/2+2*m+k-1,n/2+m)*((-1)**n+1))/(2*(m+k))  )
#----------------------------------------------------------------------------
def  Tuu0253(n,m,k) :
    return( (((-1)**m+1)*binomial(n/2+m/2,n/2)*((-1)**n+1)*binomial(n+m+k-1,(n+m)/2+(k-1)/2)*binomial((n+m)/2+(k-1)/2,(n+m)/2))/(4*binomial(k-1,(k-1)/2))  )
#----------------------------------------------------------------------------
def  Tuu0254(n,m,k) :
    return( (((-1)**m+1)*binomial(n+m/2,n)*binomial(n+m/2+(k-1)/2,n+m/2)*binomial(2*(n+m/2)+k-1,n+m/2+(k-1)/2))/(2*binomial(k-1,(k-1)/2))  )
#----------------------------------------------------------------------------
def  Tuu0255(n,m,k) :
    return( (binomial(2*(n/2+m)+k-1,n/2+m+(k-1)/2)*binomial(n/2+m,m)*binomial(n/2+m+(k-1)/2,n/2+m)*((-1)**n+1))/(2*binomial(k-1,(k-1)/2))  )
#----------------------------------------------------------------------------
def  Tuu0256(n,m,k) :
  if  k<m  :
      return( 0  )
  else:
    if  n==0  :
        return( binomial(k,m)  )
    else:
        return( binomial(k,m)*(k-m)/(n+k-m)*binomial(2*n+k-m-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0257(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( binomial(2*m-k-1,m-1)*(-1)**(m-1)*k/m  )
  else:
      return( (k*(binomial(2*m-k,m))*(binomial(-n+2*m-k-1,n-1))*(-1)**(n+m-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0258(n,m,k) :
  if  n==0  :
      return( binomial(k,m)  )
  else:
      return( (k*(binomial(m-k-1,n-1))*(-1)**(-n+m-1)*(binomial(n+m-k,m)))/n  )
#----------------------------------------------------------------------------
def  Tuu0259(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( (2*(binomial(k-1,n))*k*(binomial(-2*n+2*m+2*k-1,m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0260(n,m,k) :
    return( (k*binomial(2*m+2*k,m)*binomial(n+k-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0261(n,m,k) :
  if  k<n  :
      return( 0  )
  else:
      return( TA000984(m,k-n)*binomial(k,n)  )
#----------------------------------------------------------------------------
def  Tuu0262(n,m,k) :
  if  k < m  :
      return( 0  )
  else:
      return( binomial(k,m)*TA000984(n,k-m)  )
#----------------------------------------------------------------------------
def  Tuu0263(n,m,k) :
    return( (binomial(m+k-1,m)*binomial(n+(k-1)/2,n)*binomial(2*n+k-1,n+(k-1)/2))/binomial(k-1,(k-1)/2)  )
#----------------------------------------------------------------------------
def  Tuu0264(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(n+(m+k-1)/2,n)*binomial(2*n+m+k-1,n+(m+k-1)/2))/((m+k)*binomial(m+k-1,(m+k-1)/2))  )
#----------------------------------------------------------------------------
def  Tuu0265(n,m,k) :
    return( binomial(k,m)*(-1)**(n+m)*binomial(n-m+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0266(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
      return( k*((-1)**m+1)/2*(binomial(n+int(m/2),n))*binomial(k+2*n+m-1,n+int(m/2))/(k+n+int(m/2))  )
#----------------------------------------------------------------------------
def  Tuu0267(n,m,k) :
    return( (k*binomial(int(n/2)+m,m)*((-1)**n+1)*binomial(n+2*m+k-1,int(n/2)+m))/(n+2*m+2*k)) 
#----------------------------------------------------------------------------
def  Tuu0268(n,m,k) :
    if m==0:
        return (binomial(k,n))
    return( (binomial((-m)+k-1,n)*(-1)**(m-1)*binomial(n+m-k-1,m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0269(n,m,k) :
    return( (k*binomial(2*m+2*k,n+m)*binomial(n+m,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0270(n,m,k) :
    return( (k*binomial(n+m,n)*binomial(2*n+2*k,n+m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0271(n,m,k) :
    return( binomial(2*k,n+m)*binomial(n+m,n)  )
#----------------------------------------------------------------------------
def  Tuu0272(n,m,k) :
    return( (binomial(k,int(m/2))*binomial(k-int(m/2),n+int(m/2)-k)*((-1)**m+1))/2  )
#----------------------------------------------------------------------------
def  Tuu0273(n,m,k) :
    return( (binomial(k,int(n/2))*binomial(k-int(n/2),int(n/2)+m-k)*((-1)**n+1))/2  )
#----------------------------------------------------------------------------
def  Tuu0274(n,m,k) :
    return( kron_delta(0,mod(m,3))*binomial(k,int(m/3))*binomial(k-int(m/3),n+int(m/3)-k)  )
#----------------------------------------------------------------------------
def  Tuu0275(n,m,k) :
    return( kron_delta(0,mod(n,3))*binomial(k,int(n/3))*binomial(k-int(n/3),int(n/3)+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0276(n,m,k) :
    return( (binomial(k,m)*binomial(k-m,int((n+m-k)/2))*((-1)**(n+m-k)+1))/2  )
#----------------------------------------------------------------------------
def  Tuu0277(n,m,k) :
    return( (binomial(k,n)*binomial(k-n,int((n+m-k)/2))*((-1)**(n+m-k)+1))/2  )
#----------------------------------------------------------------------------
def  Tuu0278(n,m,k) :
    return( (binomial(k,int(n/2))*binomial(m+k-1,m)*((-1)**n+1))/2  )
#----------------------------------------------------------------------------
def  Tuu0279(n,m,k) :
    return( (binomial(k,int(m/2))*((-1)**m+1)*binomial(n+k-1,n))/2  )
#----------------------------------------------------------------------------
def  Tuu0280(n,m,k) :
    return( (k*((-1)**n+1)*binomial(n+k,int(n/2))*binomial(n+m+k-1,m))/(2*(n+k))  )
#----------------------------------------------------------------------------
def  Tuu0281(n,m,k) :
    return( (k*binomial(m+k,int(n/2))*binomial(2*m+k-1,m)*((-1)**n+1))/(2*(m+k))  )
#----------------------------------------------------------------------------
def  Tuu0282(n,m,k) :
    return( (binomial(k,m)*binomial(k-m,int(n/2))*((-1)**n+1))/2  )
#----------------------------------------------------------------------------
def  Tuu0283(n,m,k) :
    return( (binomial(k,n)*((-1)**m+1)*binomial(k-n,int(m/2)))/2  )
#----------------------------------------------------------------------------
def  Tuu0284(n,m,k) :
    return( (k*binomial(k,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0285(n,m,k) :
    return( (k*binomial(k,n)*binomial(3*m+k-1,m))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0286(n,m,k) :
    return( (k*binomial(m+k,m)*binomial(3*n+m+k-1,n))/(2*n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0287(n,m,k) :
    return( (k*binomial(2*m+k,m)*binomial(3*n+2*m+k-1,n))/(2*n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0288(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( (k*((binomial(2*m-k-1,m-1))*(-1)**(m-1)))/m  )
  else:
      return( k*((binomial(k-m,m))*(binomial(m-2*n-k-1,n-1)))*(-1)**(n+1)/(n)  )
#----------------------------------------------------------------------------
def  Tuu0289(n,m,k) :
    return( (k*binomial(n+k,n)*binomial(n+3*m+k-1,m))/(n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0290(n,m,k) :
    return( (k*binomial(2*n+k,n)*binomial(2*n+3*m+k-1,m))/(2*n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0291(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( (k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
  else:
      return( k*((binomial(k-n,n))*(binomial(n-2*m-k-1,m-1)))*(-1)**(m+1)/m  )
#----------------------------------------------------------------------------
def  Tuu0292(n,m,k) :
    if n==0:
        return binomial(k,m)
    else:
        if 2*n+k-m==0:
            return 0 
    return( (binomial(k,m)*(k-m)*binomial(3*n-m+k-1,n))/(2*n-m+k)  )
#----------------------------------------------------------------------------
def  Tuu0293(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
    if  2*m+k-n==0  :
        return( 0  )
    else:
        return( binomial(k,n)*((binomial(3*m+k-n-1,m))*(k-n))/(2*m+k-n)  )
#----------------------------------------------------------------------------
def  Tuu0294(n,m,k) :
    return( (k*binomial(m+k-1,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0295(n,m,k) :
    return( (k*binomial(3*m+k-1,m)*binomial(n+k-1,n))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0296(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(3*n+m+k-1,n))/(2*n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0297(n,m,k) :
    return( (k*binomial(n+3*m+k-1,m)*binomial(2*n+k-1,n))/(n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0298(n,m,k) :
    return( ((k*((-1)**m+1)*binomial(n+k,int(m/2))*binomial(2*n+k-1,n))/(2*(n+k)))  )
#----------------------------------------------------------------------------
def  Tuu0299(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(3*n+2*k,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0300(n,m,k) :
    return( (k*((-1)**m+1)*binomial(m+k,int(m/2))*binomial(n+m+k-1,n))/(2*(m+k))  )
#----------------------------------------------------------------------------
def  Tuu0301(n,m,k) :
    return( (k*binomial(n+m,m)*binomial(3*n+3*m+k-1,n+m))/(2*n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0302(n,m,k) :
    return( (k*binomial(m+2*k-1,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0303(n,m,k) :
    return( (k*binomial(3*m+k-1,m)*binomial(n+2*k-1,n))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0304(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( ((binomial(2*n-2*m-k-1,m-1))*(-1)**(m-1)*(k-2*n)*(binomial(k,n)))/m  )
#----------------------------------------------------------------------------
def  Tuu0305(n,m,k) :
    return( (k**2*binomial(3*m+k-1,m)*binomial(2*n+k-1,n))/((2*m+k)*(n+k))  )
#----------------------------------------------------------------------------
def  Tuu0306(n,m,k) :
    if m==0:
        return (binomial(n+k-1,n)) 
    return( ((-1)**(m-1)*(k-n)*binomial(n+k-1,n)*binomial(n-2*m-k-1,m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0307(n,m,k) :
    return( (k**2*binomial(2*m+k-1,m)*binomial(2*n+k-1,n))/((m+k)*(n+k))  )
#----------------------------------------------------------------------------
def  Tuu0308(n,m,k) :
  if  m==0  :
      return( binomial(n+k-1,n)  )
  else:
      return( ((binomial(n-m-k-1,m-1))*(-1)**(m-1)*(k-n)*(binomial(n+k-1,n)))/m  )
#----------------------------------------------------------------------------
def  Tuu0309(n,m,k) :
    if m==0:
        return (binomial(k,n))
    return( (binomial(k,n)*(-1)**(m-1)*(k-2*n)*binomial(2*n-m-k-1,m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0310(n,m,k) :
  if  n==0  :
      return( binomial(2*m+k-1,m)*k/(m+k)  )
  else:
    if  m==0  :
        return( k*binomial(2*n-k-1,n-1)*(-1)**(n-1)/n  )
    else:
        return( k*((binomial(3*n-m-k-1,m-1))*(-1)**(m-1)*(k-3*n)*(binomial(2*n-k-1,n-1)*(-1)**(n-1)))/m/n  )
#----------------------------------------------------------------------------
def  Tuu0311(n,m,k) :
    return( binomial((-n)+m+k-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0312(n,m,k) :
    return( binomial(k,n)*binomial((-2*n)+m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0313(n,m,k) :
    return( binomial(m+2*k-1,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0314(n,m,k) :
    if n==0:
        return (binomial(m+2*k-1,m))
    return( (2*k*binomial(2*(k-n)+m-1,m)*(-1)**(n-1)*binomial(2*n-2*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0315(n,m,k) :
  if  n<2*k  :
      return( 0  )
  else:
      return( 2*k*(binomial(2*(k-n)+m-1,m))*(-1)**(n)*(binomial(2*n-2*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0316(n,m,k) :
    return( (k*binomial(m+2*k-1,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0317(n,m,k) :
    return( binomial(2*(k-n)+m-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0318(n,m,k) :
    return( binomial(k,n)*binomial(2*(k-2*n)+m-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0319(n,m,k) :
  if  n==0  :
      return( binomial(m+2*k-1,m)  )
  else:
      return( k*((binomial(2*(k-3*n)+m-1,m))*(binomial(k-n-1,n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0320(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
      return( (-1)*k*((binomial(2*(k-3*n)+m-1,m))*(binomial(k-n-1,n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0321(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
    if  m==0  :
        return( (k*(binomial(3*n+k-1,n)))/(2*n+k)  )
    else:
      if  n==0  :
          return( k*((binomial(2*m-k-1,m-1))*(-1)**(m-1))/m  )
      else:
          return( (k*(binomial(k-m-1,m-1))*(k-2*m)*(binomial(-2*n+2*m-k-1,n-1)*(-1)**(n-1)))/n/m  )
#----------------------------------------------------------------------------
def  Tuu0322(n,m,k) :
  if  m<k  :
      return( 0  )
  else:
    if  n==0  :
        return( k*((binomial(2*m-k-1,m-1))*(-1)**(m))/m  )
    else:
        return( (k*(binomial(k-m-1,m-1))*(k-2*m)*(binomial(-2*n+2*m-k-1,n-1)*(-1)**n))/n/m  )
#----------------------------------------------------------------------------
def  Tuu0323(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
    if  m == 0  :
        return( (k*(-1)**n*binomial(2*n-k-1,n-1))/n  )
    else:
        return( (k*(k-3*n)*(-1)**(n+m-1)*binomial(2*n-k-1,n-1)*binomial(3*n-m-k-1,m-1))/(m*n)  )
#----------------------------------------------------------------------------
def  Tuu0324(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
      return( (k*(-1)**n*binomial(3*n,m)*binomial(2*n-k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0325(n,m,k) :
  if  n < m  :
      return( 0  )
  else:
      return( binomial(m+k-1,m)*(-1)**n*binomial(n-m+k-1,n-m)  )
#----------------------------------------------------------------------------
def  Tuu0326(n,m,k) :
  if  n<m  :
      return( 0  )
  else:
    if  m==0 and n==0  :
        return( 1  )
    else:
      if  m==0  :
          return( (-1)**n*binomial(k,n)  )
      else:
          return( (k*(binomial(-m+k-1,n-m))*(binomial(n-k-1,m-1))*(-1)**(n-m+1))/m  )
#----------------------------------------------------------------------------
def  Tuu0327(n,m,k) :
  if  n < m  :
      return( 0  )
  else:
      return( (k*binomial(2*m+k-1,m)*(-1)**n*binomial(n+k-1,n-m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0328(n,m,k) :
  if  m==0  :
      return( (-1)**n*binomial(n+k-1,n)  )
  else:
      return( (k*(binomial(k-m-1,m-1))*(-1)**n*(binomial(n-2*m+k-1,n)))/(m)  )
#----------------------------------------------------------------------------
def  Tuu0329(n,m,k) :
  if  m < k  :
      return( 0  )
  else:
      return( -(k*binomial((-m)+k-1,m-1)*(-1)**n*binomial(n-2*m+k-1,n))/m  )
#----------------------------------------------------------------------------
def  Tuu0330(n,m,k) :
  if  m==0  :
      return( (-1)**n*binomial(k,n)  )
  else:
      return( (k*(binomial(-m+k-1,n))*(binomial(k-n-1,m-1))*(-1)**n)/m  )
#----------------------------------------------------------------------------
def  Tuu0331(n,m,k) :
  if  m < k or n < k  :
      return( 0  )
  else:
      return( -(k*binomial((-m)+k-1,n)*binomial((-n)+k-1,m-1)*(-1)**n)/m  )
#----------------------------------------------------------------------------
def  Tuu0332(n,m,k) :
  if  m==0  :
      return( k/(n+k)*binomial(2*n+k-1,n)  )
  else:
      return( (k*((binomial(2*m-k-1,m-1))*(-1)**(m-1)))/m*k/(n+k)*binomial(2*n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0333(n,m,k) :
  if  m==0  :
      return( binomial(n+k-1,n)  )
  else:
      return( ((k-n)*((binomial(2*m+n-k-1,m-1))*(-1)**(m-1)))/m*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0334(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( ((k-2*n)*((binomial(2*m+2*n-k-1,m-1))*(-1)**(m-1)))/m*binomial(k,n)  )
#----------------------------------------------------------------------------
def  Tuu0335(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
    if  m==0  :
        return( (k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
    else:
      if  n==0  :
          return( (k*((binomial(2*m-k-1,m-1))*(-1)**(m-1)))/m  )
      else:
          return( ((k-3*n)*((binomial(2*m+3*n-k-1,m-1))*(-1)**(m-1)))/m*binomial(k-n-1,n-1)*k/n  )
#----------------------------------------------------------------------------
def  Tuu0336(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
    if  m==0  :
        return( -(k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
    else:
        return( -((k-3*n)*((binomial(2*m+3*n-k-1,m-1))*(-1)**(m-1)))/m*binomial(k-n-1,n-1)*k/n  )
#----------------------------------------------------------------------------
def  Tuu0337(n,m,k) :
    return( binomial((-n)+m+k-1,m)*binomial(2*n+2*(k-n),n)  )
#----------------------------------------------------------------------------
def  Tuu0338(n,m,k) :
    return( (k*binomial(2*m+2*k,n)*binomial((-n)+2*m+k-1,m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0339(n,m,k) :
    return( binomial(2*k,n)*binomial(k-n,m)  )
#----------------------------------------------------------------------------
def  Tuu0340(n,m,k) :
    return( (k*binomial(2*(m+k),n)*binomial((-n)+m+k,m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0341(n,m,k) :
    return( (k**2*binomial(2*m+k-1,m)*binomial(2*n+2*k,n))/((m+k)*(n+k))  )
#----------------------------------------------------------------------------
def  Tuu0342(n,m,k) :
    if m==0:
        return (binomial(2*k,n))
    return( (binomial(2*k,n)*(-1)**(m-1)*(k-n)*binomial(n-m-k-1,m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0343(n,m,k) :
    if n==0:
        return (binomial(k,m))
    return( (2*k*binomial(2*(k-n)-1,n-1)*binomial(k-2*n,m))/n  )
#----------------------------------------------------------------------------
def  Tuu0344(n,m,k) :
  
    if n==0:
        return (binomial(m+k-1,m))
    return( (2*k*binomial((-2*n)+2*k-1,n-1)*binomial((-2*n)+m+k-1,m))/n  )
#----------------------------------------------------------------------------
def  Tuu0345(n,m,k) :
    if n==0:
        return (k/(m+k)*binomial(2*m+k-1,m))
    else:
        if m==0:
            return (2*binomial(2*k-2*n-1,n-1)/n) 
    return( (2*k*(-1)**(m-1)*binomial(2*(k-n)-1,n-1)*(k-2*n)*binomial(2*n-m-k-1,m-1))/(m*n)  )
#----------------------------------------------------------------------------
def  Tuu0346(n,m,k) :
    return( (k**2*binomial(2*m+2*k,m)*binomial(2*n+2*k,n))/((m+k)*(n+k))  )
#----------------------------------------------------------------------------
def  Tuu0347(n,m,k) :
    if m==0:
        return (binomial(2*k,n))
    return( (2*binomial((-2*n)+2*m+2*k-1,m-1)*(k-n)*binomial(2*n+2*(k-n),n))/m  )
#----------------------------------------------------------------------------
def  Tuu0348(n,m,k) :
    
    if n==0:
        return (k/(m+k)*binomial(2*m+2*k,m))
    else:
        if m==0:
            return (2*k*binomial(2*k-2*n-1,n-1)/n) 
    return( (4*k*binomial(2*(k-n)-1,n-1)*binomial((-4*n)+2*m+2*k-1,m-1)*(k-2*n))/(m*n)  )
#----------------------------------------------------------------------------
def  Tuu0349(n,m,k) :
    return( (k*binomial(m+2*k-1,m)*binomial(2*n+2*k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0350(n,m,k) :
    return( binomial(2*k,n)*binomial(2*(k-n)+m-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0351(n,m,k) :
    if n==0:
        return (binomial(m+2*k-1,m))
    return( (2*k*binomial(2*(k-2*n)+m-1,m)*binomial(2*(k-n)-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0352(n,m,k) :
    return( (k*binomial(m+3*k-1,m)*binomial(2*n+2*k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0353(n,m,k) :
    return( binomial(2*k,n)*binomial(3*(k-n)+m-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0354(n,m,k) :
    return( (k*binomial(m+3*k-1,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0355(n,m,k) :
    return( binomial(3*(k-n)+m-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0356(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
      return( -(k*binomial((-n)+k-1,n+m-1)*binomial(n+m,m))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0357(n,m,k) :
    return( binomial(2*k,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0358(n,m,k) :
    return( (k*binomial(2*(n+k),m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0359(n,m,k) :
    return( (k*binomial(2*(m+k),m)*binomial(n+m+k-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0360(n,m,k) :
    return( binomial(k,n)*binomial(2*k-2*n,m)  )
#----------------------------------------------------------------------------
def  Tuu0361(n,m,k) :
    return( (k*binomial(m+k,n)*binomial(2*(m+k)-2*n,m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0362(n,m,k) :
    if n==0:
        return (binomial(2*k,m))
    return( (k*binomial(2*k-4*n,m)*binomial((-n)+k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0363(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
      return( -(k*binomial(2*k-4*n,m)*binomial((-n)+k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0364(n,m,k) :
    if n==0 and m==0:
        return (1)
    else:
        if n==0:
            return (2*binomial(2*k-2*n-1,m-1)*k/m)
        else:
            if m==0:
                return (k*(-1)**(n-1)*binomial(3*n-k-1,n-1)/n)

    return( (k*binomial(2*k-6*n,m)*binomial((-2*n)+k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0365(n,m,k) :
    if n+m==0:
        return (1)
    return( (k*binomial((-2*n)+k-1,n+m-1)*binomial(n+m,m))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0366(n,m,k) :
    if n==0:
        return (binomial(m+k-1,m)) 
    return( (k*binomial((-2*n)+m+k-1,m)*binomial((-n)+k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0367(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
      return( -(k*binomial((-2*n)+m+k-1,m)*binomial((-n)+k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0368(n,m,k) :
    if n==0:
        if m==0:
            return (1)
        else:
            return (binomial(-k+n-1,m-1)*(-1)**(m-1)*k/m) 
    return( (k*binomial((-3*n)+m+k-1,m)*binomial((-2*n)+k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0369(n,m,k) :
    return( binomial(k,n)*binomial((-2*n)+m+2*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0370(n,m,k) :
    if n==0:
        return (binomial(m+2*k-1,m)) 
    return( (k*binomial((-4*n)+m+2*k-1,m)*binomial((-n)+k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0371(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
      return( -(k*binomial((-4*n)+m+2*k-1,m)*binomial((-n)+k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0372(n,m,k) :
    if m==0:
        return (binomial(n+2*k-1,n))
    return( (k*binomial((-m)+k-1,m-1)*binomial(n-4*m+2*k-1,n))/m  )
#----------------------------------------------------------------------------
def  Tuu0373(n,m,k) :
    return( (k*binomial(2*k,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0374(n,m,k) :
    return( binomial(k-n,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0375(n,m,k) :
    return( 4**m*binomial((k-n)/2+m-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0376(n,m,k) :
    if n==0:
        if m==0:
            return (1)
        else:
            return(k*4**m*binomial((n-k)/2-1,m-1)*(-1)**(m-1)/(2*m)) 
    return( (k*4**m*binomial((k-2*n)/2+m-1,m)*(-1)**(n-1)*binomial(n-k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0377(n,m,k) :
    if n==0:
        if m==0:
            return 1
        else:
            return(k*4**m*binomial((2*n-k)/2-1,m-1)*(-1)**(m-1)/(2*m))

    return( (k*4**m*binomial((k-3*n)/2+m-1,m)*(-1)**(n-1)*binomial(2*n-k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0378(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
      return( -(k*4**m*binomial((k-3*n)/2+m-1,m)*(-1)**(n-1)*binomial(2*n-k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0379(n,m,k) :
    if n==0:
        if m==0:
            return 1
        else:
            return(k*4**m*binomial((3*n-k)/2-1,m-1)*(-1)**(m-1)/(2*m))
    return( (k*4**m*binomial((k-4*n)/2+m-1,m)*(-1)**(n-1)*binomial(3*n-k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0380(n,m,k) :
    if n==0:
        return (binomial(k,m))
    return( (k*binomial((-n)+k-1,n-1)*binomial(k-n,m))/n  )
#----------------------------------------------------------------------------
def  Tuu0381(n,m,k) :
    return( (k*(-1)**(n+m+k)*binomial(n+m-1,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0382(n,m,k) :
    if n==0:
        if m==0:
            return 1
        else:
            return (binomial(k-n-1,m-1)*k/m)
    return( (k*binomial((-2*n)+k-1,n-1)*binomial(k-2*n,m))/n  )
#----------------------------------------------------------------------------
def  Tuu0383(n,m,k) :
    if n==0:
        return binomial(m+k-1,m)
    return( (k*binomial((-n)+k-1,n-1)*binomial((-n)+m+k-1,m))/n  )
#----------------------------------------------------------------------------
def  Tuu0384(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
      return( -(k*binomial((-n)+k-1,n-1)*binomial((-n)+m+k-1,m))/n  )
#----------------------------------------------------------------------------
def  Tuu0385(n,m,k) :
    if n==0:
        if m==0:
            return 1
        else:
            return (binomial(n-k-1,m-1)*(-1)**(m-1)*k/m)
    return( (k*binomial((-2*n)+k-1,n-1)*binomial((-2*n)+m+k-1,m))/n  )
#----------------------------------------------------------------------------
def  Tuu0386(n,m,k) :
    return( binomial(k,n)*binomial(2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0387(n,m,k) :
    return( (k*binomial(m+k,n)*binomial(2*(m+k),m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0388(n,m,k) :
    return( binomial(n+k-1,n)*binomial(2*(n+k),m)  )
#----------------------------------------------------------------------------
def  Tuu0389(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(2*(2*n+k),m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0390(n,m,k) :
    if n==0:
        return (binomial(2*k,m))
    return( (k*binomial((-n)+k-1,n-1)*binomial(2*(k-n),m))/n  )
#----------------------------------------------------------------------------
def  Tuu0391(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
      return( -(k*binomial((-n)+k-1,n-1)*binomial(2*(k-n),m))/n  )
#----------------------------------------------------------------------------
def  Tuu0392(n,m,k) :
    if n==0:
        if m==0:
            return 1
        else:
            return (2*binomial(2*(k-n)-1,m-1)*k/m)
    return( (k*binomial((-2*n)+k-1,n-1)*binomial(2*(k-2*n),m))/n  )
#----------------------------------------------------------------------------
def  Tuu0393(n,m,k) :
    return( binomial(k,n)*4**m*binomial(m+k/2-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0394(n,m,k) :
    return( 4**m*binomial(n+k-1,n)*binomial((n+k)/2+m-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0395(n,m,k) :
    return( (k*4**m*binomial(2*n+k-1,n)*binomial((2*n+k)/2+m-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0396(n,m,k) :
    if n==0:
        return (4**m*binomial(m+k/2-1,m))
    return( (k*4**m*binomial((k-n)/2+m-1,m)*binomial((-n)+k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0397(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
      return( -(k*4**m*binomial((k-n)/2+m-1,m)*binomial((-n)+k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0398(n,m,k) :
    if n==0:
        if m==0:
            return 1
        else:
            return (1/2*4**m*binomial((n-k)/2-1,m-1)*(-1)**(m-1)*k/(m))
    return( (k*4**m*binomial((k-2*n)/2+m-1,m)*binomial((-2*n)+k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0399(n,m,k) :
    if m==0:
        if n==0:
            return 1
        else:
            return ((k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n)
    return( (k*(-1)**(m-1)*binomial(k-n,n)*binomial(n-m-k-1,m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0400(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
    if  m == 0  :
        return( -(k*(-1)**(n-1)*binomial(2*n-k-1,n-1))/n  )
    else:
        return( -(k*(-1)**(m-1)*binomial(k-n,n)*binomial(n-m-k-1,m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0401(n,m,k) :
    if m==0:
        if n==0:
            return 1
        else:
            return ((k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n)
    return( (k*(-1)**(m-1)*binomial(k-2*n,n)*binomial(2*n-m-k-1,m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0402(n,m,k) :
    return( (k*binomial(k,n)*binomial(2*m+2*k,m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0403(n,m,k) :
    return( (k*binomial(n+k,n)*binomial(2*(n+k)+2*m,m))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0404(n,m,k) :
    return( (k*binomial(2*n+k,n)*binomial(2*(2*n+k)+2*m,m))/(2*n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0405(n,m,k) :
    if m==0:
        if n==0:
            return 1
        else:
            return ((k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n) 
    return( (2*k*binomial((-2*n)+2*m+2*k-1,m-1)*binomial(k-n,n))/m  )
#----------------------------------------------------------------------------
def  Tuu0406(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
    if  m == 0  :
        return( -(k*(-1)**(n-1)*binomial(2*n-k-1,n-1))/n  )
    else:
        return( -(2*k*binomial((-2*n)+2*m+2*k-1,m-1)*binomial(k-n,n))/m  )
#----------------------------------------------------------------------------
def  Tuu0407(n,m,k) :
    if m==0:
        if n==0:
            return 1
        else:
            return ((k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n)
    return( (2*k*binomial((-4*n)+2*m+2*k-1,m-1)*binomial(k-2*n,n))/m  )
#----------------------------------------------------------------------------
def  Tuu0408(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
    if  m == 0  :
        return( -(k*(-1)**(n-1)*binomial(2*n-k-1,n-1))/n  )
    else:
        return( -(k*(-1)**(m+1)*binomial(k-n,n)*binomial(n-2*m-k-1,m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0409(n,m,k) :
    if m==0:
        if n==0:
            return 1
        else:
            return ((k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n)
    return( (k*(-1)**(m+1)*binomial(k-2*n,n)*binomial(2*n-2*m-k-1,m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0410(n,m,k) :
    if m==0:
        if n==0:
            return 1
        else: return (k*binomial(k-n-1,n-1)/n)
    return( (k*(-1)**(m-1)*binomial(k-n,n)*binomial(n+2*m-k-1,m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0411(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
    if  m == 0  :
        return( -(k*binomial((-n)+k-1,n-1))/n  )
    else:
        return( -(k*(-1)**(m-1)*binomial(k-n,n)*binomial(n+2*m-k-1,m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0412(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( k*binomial(k-2*n-1,n-1)/n  )
  else:
      return( (k*((binomial(2*m+2*n-k-1,m-1))*(-1)**(m-1)))/m*binomial(k-2*n,n)  )
#----------------------------------------------------------------------------
def  Tuu0413(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( (k*((binomial(2*m+n-k-1,m-1))*(-1)**(m-1)))/m*binomial(k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0414(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( binomial(k-n-1,n-1)*k/(n)  )
  else:
      return( (k*((binomial(2*m+2*n-k-1,m-1))*(-1)**(m-1)))/m*binomial(k-n-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0415(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
    if  m==0  :
        return( -binomial(k-n-1,n-1)*k/(n)  )
    else:
        return( -(k*((binomial(2*m+2*n-k-1,m-1))*(-1)**(m-1)))/m*binomial(k-n-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0416(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( binomial(k-2*n-1,n-1)*k/(n)  )
  else:
      return( (k*((binomial(2*m+3*n-k-1,m-1))*(-1)**(m-1)))/m*binomial(k-2*n-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0417(n,m,k) :
    return( binomial(m+2*k-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0418(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(2*(n+k)+m-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0419(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( (2*k*((binomial(2*m-2*k-1,m-1))*(-1)**(m-1)))/m  )
  else:
      return( k*(binomial(m+2*(k-m)-1,m))*(binomial(m-k-1,n-1)*(-1)**(n-1)/n)  )
#----------------------------------------------------------------------------
def  Tuu0420(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( 2*binomial(2*n-2*k-1,m-1)*k/m*(-1)**(m-1)  )
  else:
      return( (binomial(k-2*n-1,n-1))*(binomial(-6*n+m+2*k-1,m))*k/n  )
#----------------------------------------------------------------------------
def  Tuu0421(n,m,k) :
  if  n==0  :
      return( (binomial(m+(k)/2-1,m))*4**m  )
  else:
      return( (k*4**m*(binomial((k-2*n)/2+m-1,m))*(binomial(k-n-1,n-1)))/(n)  )
#----------------------------------------------------------------------------
def  Tuu0422(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
      return( -(k*4**m*(binomial((k-2*n)/2+m-1,m))*(binomial(k-n-1,n-1)))/(n)  )
#----------------------------------------------------------------------------
def  Tuu0423(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( 1/2*(binomial(-(k-n)/2-1,m-1))*4**m*(-1)**(m-1)/m  )
  else:
      return( (k*4**m*(binomial((k-3*n)/2+m-1,m))*(binomial(k-2*n-1,n-1)))/(n)  )
#----------------------------------------------------------------------------
def  Tuu0424(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( (k*(binomial(-m+k-1,n))*(binomial(n-k-1,m-1)*(-1)**(m-1)))/(m)  )
#----------------------------------------------------------------------------
def  Tuu0425(n,m,k) :
  if  n<2*k or m==0  :
      return( 0  )
  else:
      return( -(k*(binomial(-m+k-1,n))*(binomial(n-k-1,m-1)*(-1)**(m-1)))/(m)  )
#----------------------------------------------------------------------------
def  Tuu0426(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( binomial(3*n-k-1,n-1)*(-1)**(n-1)*k/n  )
  else:
      return( (k*(-1)**(m+n-1)*(binomial(3*n-k,n))*(binomial(3*n-m-k-1,m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0427(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( binomial(k-n-1,n-1)*k/(n)  )
  else:
      return( (2*(binomial(k-n-1,n))*k*(binomial(-4*n+2*m+2*k-1,m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0428(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
    if  m==0  :
        return( -binomial(k-n-1,n-1)*k/(n)  )
    else:
        return( -(2*(binomial(k-n-1,n))*k*(binomial(-4*n+2*m+2*k-1,m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0429(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( binomial(k-2*n-1,n-1)*k/(n)  )
  else:
      return( (2*(binomial(k-2*n-1,n))*k*(binomial(-6*n+2*m+2*k-1,m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0430(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
    if  n==0  :
        return( (k*(binomial(3*m+k-1,m)))/(2*m+k)  )
    else:
      if  m==0  :
          return( k*((binomial(2*n-k-1,n-1))*(-1)**(n-1))/n  )
      else:
          return( (k*(binomial(k-n-1,n-1))*(k-2*n)*(binomial(-2*m+2*n-k-1,m-1)*(-1)**(m-1)))/(n*m)  )
#----------------------------------------------------------------------------
def  Tuu0431(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
    if  m==0  :
        return( k*((binomial(2*n-k-1,n-1))*(-1)**(n))/n  )
    else:
        return( (k*(binomial(k-n-1,n-1))*(k-2*n)*(binomial(-2*m+2*n-k-1,m-1)*(-1)**m))/(n)/m  )
#----------------------------------------------------------------------------
def  Tuu0432(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
    if  n==0  :
        return( (k*(binomial(3*m+k-n-1,m)))/(2*m+k)  )
    else:
      if  m==0  :
          return( k*((binomial(3*n-k-1,n-1))*(-1)**(n-1))/n  )
      else:
          return( (k*(binomial(k-2*n-1,n-1))*(k-3*n)*(binomial(-2*m+3*n-k-1,m-1)*(-1)**(m-1)))/(n)/m  )
#----------------------------------------------------------------------------
def  Tuu0433(n,m,k) :
  if  m==0  :
      return( binomial(n+2*k-1,n)  )
  else:
      return( binomial(n+2*k-1,n)*(k*((binomial(2*m-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0434(n,m,k) :
    return( binomial(k,m)*binomial(n+2*m+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0435(n,m,k) :
    return( (k*binomial(m+k,m)*binomial(n+4*m+2*k-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0436(n,m,k) :
    return( (k*binomial(2*m+k,m)*binomial(n+6*m+2*k-1,n))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0437(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( 2*binomial(2*n-2*k-1,n-1)*(-1)**(n-1)*k/(n)  )
  else:
      return( (k*((binomial(2*m+n-k-1,m-1))*(-1)**(m-1)))/m*(binomial(2*k-n-1,n))  )
#----------------------------------------------------------------------------
def  Tuu0438(n,m,k) :
  if  n<2*k  :
      return( 0  )
  else:
    if  m==0  :
        return( -2*binomial(2*n-2*k-1,n-1)*(-1)**(n-1)*k/n  )
    else:
        return( -(k*((binomial(2*m+n-k-1,m-1))*(-1)**(m-1)))/m*(binomial(2*k-n-1,n))  )
#----------------------------------------------------------------------------
def  Tuu0439(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( (2*k*((binomial(2*n-2*k-1,n-1))*(-1)**(n-1)))/n  )
  else:
      return( (k*(binomial(k-n-1,m-1))*(binomial(n+2*(k-n)-1,n)))/(m)  )
#----------------------------------------------------------------------------
def  Tuu0440(n,m,k) :
  if  n<2*k  :
      return( 0  )
  else:
    if  m==0  :
        return( -(2*k*((binomial(2*n-2*k-1,n-1))*(-1)**(n-1)))/n  )
    else:
        return( -(k*(binomial(k-n-1,m-1))*(binomial(n+2*(k-n)-1,n)))/(m)  )
#----------------------------------------------------------------------------
def  Tuu0441(n,m,k) :
    return( binomial(2*k,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0442(n,m,k) :
    return( (k*binomial(2*(m+k),m)*binomial(n+2*(m+k)-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0443(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( (2*k*((binomial(2*n-2*k-1,n-1))*(-1)**(n-1)))/n  )
  else:
      return( (2*k*binomial(2*(k-n)-1,m-1)*(binomial(n+2*(k-n)-1,n)))/(m)  )
#----------------------------------------------------------------------------
def  Tuu0444(n,m,k) :
  if  n<2*k  :
      return( 0  )
  else:
    if  m==0  :
        return( -(2*k*((binomial(2*n-2*k-1,n-1))*(-1)**(n-1)))/n  )
    else:
        return( -(2*k*binomial(2*(k-n)-1,m-1)*(binomial(n+2*(k-n)-1,n)))/m  )
#----------------------------------------------------------------------------
def  Tuu0445(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( (2*k*((binomial(2*n-2*k-1,n-1))*(-1)**(n-1)))/n  )
  else:
      return( (k*(binomial(n-k-1,m-1))*(-1)**(m-1)*(binomial(n+2*(k-n)-1,n)))/(m)  )
#----------------------------------------------------------------------------
def  Tuu0446(n,m,k) :
  if  n<2*k  :
      return( 0  )
  else:
    if  m==0  :
        return( -(2*k*((binomial(2*n-2*k-1,n-1))*(-1)**(n-1)))/n  )
    else:
        return( -(k*(binomial(n-k-1,m-1))*(-1)**(m-1)*(binomial(n+2*(k-n)-1,n)))/m  )
#----------------------------------------------------------------------------
def  Tuu0447(n,m,k) :
    return( binomial(m+3*k-1,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0448(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( (2*k*((binomial(2*n-2*k-1,n-1))*(-1)**(n-1)))/n  )
  else:
      return( k*3*binomial(-3*(k-n)-1,m-1)*(-1)**(m-1)/m*binomial(n+2*(k-n)-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0449(n,m,k) :
  if  n<2*k  :
      return( 0  )
  else:
    if  m==0  :
        return( -(2*k*((binomial(2*n-2*k-1,n-1))*(-1)**(n-1)))/n  )
    else:
        return( -k*3*binomial(-3*(k-n)-1,m-1)*(-1)**(m-1)/m*binomial(n+2*(k-n)-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0450(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( (2*k*((binomial(2*n-2*k-1,n-1))*(-1)**(n-1)))/n  )
  else:
      return( binomial(2*k-n-1,n)*(k)*binomial(n-m-k-1,m-1)/(m)*(-1)**(m-1)  )
#----------------------------------------------------------------------------
def  Tuu0451(n,m,k) :
  if  n<2*k  :
      return( 0  )
  else:
    if  m==0  :
        return( (-2*k*((binomial(2*n-2*k-1,n-1))*(-1)**(n-1)))/n  )
    else:
        return( -binomial(2*k-n-1,n)*(k)*binomial(n-m-k-1,m-1)/(m)*(-1)**(m-1)  )
#----------------------------------------------------------------------------
def  Tuu0452(n,m,k) :
    return( (k*binomial((-n)+m+k,m)*binomial(n+m+k-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0453(n,m,k) :
    return( binomial(k,n)*binomial(k-2*n,m)  )
#----------------------------------------------------------------------------
def  Tuu0454(n,m,k) :
  if  n==0  :
      return( binomial(k,m)  )
  else:
      return( (binomial(k-n-1,n-1))*(binomial(k-3*n,m))*k/n  )
#----------------------------------------------------------------------------
def  Tuu0455(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
      return( -(binomial(k-n-1,n-1))*(binomial(k-3*n,m))*k/(n)  )
#----------------------------------------------------------------------------
def  Tuu0456(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( binomial(k,m)  )
  else:
      return( (binomial(k-2*n-1,n-1))*(binomial(k-4*n,m))*k/(n)  )
#----------------------------------------------------------------------------
def  Tuu0457(n,m,k) :
  if  n==0  :
      return( binomial(m+k-1,m)  )
  else:
      return( (m*((binomial(3*n-m-1,n-1))*(-1)**(n-1)))/n*binomial(m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0458(n,m,k) :
    return( binomial(2*(k-n),m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0459(n,m,k) :
    return( binomial(k,n)*binomial(2*(k-2*n),m)  )
#----------------------------------------------------------------------------
def  Tuu0460(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( binomial(2*k,m)  )
  else:
      return( (k*(binomial(2*(k-3*n),m))*(binomial(k-n-1,n-1)))/(n)  )
#----------------------------------------------------------------------------
def  Tuu0461(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
      return( -(k*(binomial(2*(k-3*n),m))*(binomial(k-n-1,n-1)))/(n)  )
#----------------------------------------------------------------------------
def  Tuu0462(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( 2*binomial(2*k-2*n-1,m-1)*k/(m)  )
  else:
      return( (k*(binomial(2*(k-4*n),m))*(binomial(k-2*n-1,n-1)))/(n)  )
#----------------------------------------------------------------------------
def  Tuu0463(n,m,k) :
  if  n==0  :
      return( binomial(m+k-1,m)  )
  else:
      return( (k*(binomial(-3*n+m+k-1,m))*(binomial(k-n-1,n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0464(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
      return( -(k*(binomial(-3*n+m+k-1,m))*(binomial(k-n-1,n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0465(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( binomial(n-k-1,m-1)*(-1)**(m-1)*k/(m)  )
  else:
      return( (k*(binomial(-4*n+m+k-1,m))*(binomial(k-2*n-1,n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0466(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
      return( k*((binomial(2*(k-3*n)+m-1,m))*(binomial(k-n-1,n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0467(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( 2*binomial(2*n-2*k-1,m-1)*(-1)**(m-1)*k/m  )
  else:
      return( k*((binomial(2*(k-4*n)+m-1,m))*(binomial(k-2*n-1,n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0468(n,m,k) :
  if  n==0  :
      return( (k/(k+m))*binomial(2*m+k-1,m)  )
  else:
      return( (k/(k+m))*(m*((binomial(3*n-m-1,n-1))*(-1)**(n-1)))/n*binomial(2*m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0469(n,m,k) :
  if  n==0  :
      return( binomial(k,m)  )
  else:
      return( (m*((binomial(3*n-m-1,n-1))*(-1)**(n-1)))/n*binomial(k,m)  )
#----------------------------------------------------------------------------
def  Tuu0470(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( k*binomial(2*m-k-1,m-1)*(-1)**(m-1)/m  )
  else:
      return( binomial(3*n-m-1,n-1)*(-1)**(n-1)/n*k*binomial(2*m-k-1,m-1)*(-1)**(m-1)  )
#----------------------------------------------------------------------------
def  Tuu0471(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
    if  m==0  :
        return( (k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n  )
    else:
      if  n==0  :
          return( (k*((binomial(2*m+n-k-1,m-1))*(-1)**(m-1)))/m  )
      else:
          return( ((k-4*n)*((binomial(2*m+4*n-k-1,m-1))*(-1)**(m-1)))/m*binomial(k-2*n-1,n-1)*k/n  )
#----------------------------------------------------------------------------
def  Tuu0472(n,m,k) :
  if  m==0  :
      return( k/(n+k)*binomial(2*n+k-1,n)  )
  else:
      return( (k*((binomial(3*m-k-1,m-1))*(-1)**(m-1)))/m*k/(n+k)*binomial(2*n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0473(n,m,k) :
  if  m==0  :
      return( binomial(n+k-1,n)  )
  else:
      return( (((binomial(3*m+n-k-1,m-1))*(-1)**(m-1)))/m*(k-n)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0474(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( (((binomial(3*m+2*n-k-1,m-1))*(-1)**(m-1)))/m*(k-2*n)*binomial(k,n)  )
#----------------------------------------------------------------------------
def  Tuu0475(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( k*binomial(k-n-1,n-1)/n  )
  else:
    if  n==0  :
        return( (k*((binomial(3*m-k-1,m-1))*(-1)**(m-1)))/m  )
    else:
        return( (((binomial(3*m+3*n-k-1,m-1))*(-1)**(m-1)))/m*(k-3*n)*binomial(k-n-1,n-1)*k/n  )
#----------------------------------------------------------------------------
def  Tuu0476(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
    if  m==0  :
        return( -k*binomial(k-n-1,n-1)/n  )
    else:
        return( -(((binomial(3*m+3*n-k-1,m-1))*(-1)**(m-1)))/m*(k-3*n)*binomial(k-n-1,n-1)*k/n  )
#----------------------------------------------------------------------------
def  Tuu0477(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( k*binomial(k-2*n-1,n-1)/n  )
  else:
    if  n==0  :
        return( (k*((binomial(3*m+n-k-1,m-1))*(-1)**(m-1)))/m  )
    else:
        return( (((binomial(3*m+4*n-k-1,m-1))*(-1)**(m-1)))/m*(k-4*n)*binomial(k-2*n-1,n-1)*k/n  )
#----------------------------------------------------------------------------
def  Tuu0478(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( k*binomial(k-n-1,n-1)/n  )
  else:
    if  n==0  :
        return( (k*(binomial(3*m+k-1,m)))/(2*m+k)  )
    else:
        return( k*((binomial(3*n-2*m-k-1,m-1))*(-1)**(m-1)*(k-3*n)*(binomial(k-n-1,n-1)))/m/n  )
#----------------------------------------------------------------------------
def  Tuu0479(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
    if  m==0  :
        return( -binomial(k-n-1,n-1)/n  )
    else:
        return( -((binomial(3*n-2*m-k-1,m-1))*(-1)**(m-1)*(k-3*n)*(binomial(k-n-1,n-1)))/m/n  )
#----------------------------------------------------------------------------
def  Tuu0480(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( k*binomial(k-2*n-1,n-1)/n  )
  else:
    if  n==0  :
        return( (k*(binomial(3*m+k-1,m)))/(2*m+k)  )
    else:
        return( k*((binomial(4*n-2*m-k-1,m-1))*(-1)**(m-1)*(k-4*n)*(binomial(k-2*n-1,n-1)))/m/n  )
#----------------------------------------------------------------------------
def  Tuu0481(n,m,k) :
    return( (k*binomial(2*k,m)*binomial(2*n+2*k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0482(n,m,k) :
    return( (k*binomial(2*(m+k),m)*binomial(2*n+2*(m+k),n))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0483(n,m,k) :
    return( binomial(2*k,n)*binomial(2*k-2*n,m)  )
#----------------------------------------------------------------------------
def  Tuu0484(n,m,k) :
  if  n==0  :
      return( binomial(2*k,m)  )
  else:
      return( 2*k*(binomial(2*k-2*n-1,n-1))/n*(binomial(2*k-4*n,m))  )
#----------------------------------------------------------------------------
def  Tuu0485(n,m,k) :
    return( (k**2*binomial(3*m+k-1,m)*binomial(2*n+2*k,n))/((2*m+k)*(n+k))  )
#----------------------------------------------------------------------------
def  Tuu0486(n,m,k) :
  if  m==0  :
      return( binomial(2*k,n)  )
  else:
      return( ((binomial(n-2*m-k-1,m-1))*(-1)**(m-1)*(k-n)*(binomial(2*k,n)))/(m)  )
#----------------------------------------------------------------------------
def  Tuu0487(n,m,k) :
    return( (k*binomial(2*k,n)*binomial(3*m+k-1,m))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0488(n,m,k) :
    return( (k*binomial(2*(n+k),n)*binomial(n+3*m+k-1,m))/(n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0489(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( (2*k*((binomial(2*n-2*k-1,n-1))*(-1)**(n-1)))/n  )
  else:
      return( (k*(binomial(n-2*m-k-1,m-1)*(-1)**(m-1)/m)*(binomial(2*k-n-1,n)))  )
#----------------------------------------------------------------------------
def  Tuu0490(n,m,k) :
  if  n<2*k  :
      return( 0  )
  else:
    if  m==0  :
        return( (2*k*((binomial(2*n-2*k-1,n-1))*(-1)**(n)))/n  )
    else:
        return( (k*(binomial(n-2*m-k-1,m-1)*(-1)**(m)/m)*(binomial(2*k-n-1,n)))  )
#----------------------------------------------------------------------------
def  Tuu0491(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(3*n+k,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0492(n,m,k) :
    return( binomial(k,n)*binomial(2*n+2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0493(n,m,k) :
    return( (k*binomial(n+k,n)*binomial(2*(n+k)+2*n,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0494(n,m,k) :
    return( (k*binomial(2*n+k,n)*binomial(2*(2*n+k)+2*n,m))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0495(n,m,k) :
    return( binomial(k,n)*binomial(n+m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0496(n,m,k) :
    return( (k*binomial(n+k,n)*binomial(2*n+m+k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0497(n,m,k) :
    return( (k*binomial(2*n+k,n)*binomial(3*n+m+k-1,m))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0498(n,m,k) :
    return( binomial(k,n)*binomial(2*n+m+2*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0499(n,m,k) :
    return( (k*binomial(n+k,n)*binomial(4*n+m+2*k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0500(n,m,k) :
    return( (k*binomial(2*n+k,n)*binomial(2*(n+k)+4*n+m-1,m))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0501(n,m,k) :
    return( (binomial(k,n)*(n+k)*binomial(n+2*m+k-1,m))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0502(n,m,k) :
    return( (k*(2*n+k)*binomial(n+k,n)*binomial(2*n+2*m+k-1,m))/((n+k)*(2*n+m+k))  )
#----------------------------------------------------------------------------
def  Tuu0503(n,m,k) :
    return( (k*(3*n+k)*binomial(2*n+k,n)*binomial(3*n+2*m+k-1,m))/((2*n+k)*(3*n+m+k))  )
#----------------------------------------------------------------------------
def  Tuu0504(n,m,k) :
  if  n==0  :
      return( binomial(2*k,m)  )
  else:
      return( (k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n*binomial(2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0505(n,m,k) :
  if  n==0  :
      return( binomial(m+2*k-1,m)  )
  else:
      return( (k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n*binomial(m+2*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0506(n,m,k) :
  if  n==0  :
      return( binomial(2*m+k-1,m)*k/(m+k)  )
  else:
      return( (k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n*binomial(2*m+k-1,m)*k/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0507(n,m,k) :
  if  n==0  :
      return( binomial(2*m+2*k,m)*k/(m+k)  )
  else:
      return( (k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n*binomial(2*m+2*k,m)*k/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0508(n,m,k) :
    return( (binomial(k,n)*(n+k)*binomial(2*n+2*m+2*k,m))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0509(n,m,k) :
    return( (k*(2*n+k)*binomial(n+k,n)*binomial(2*(n+k)+2*n+2*m,m))/((n+k)*(2*n+m+k))  )
#----------------------------------------------------------------------------
def  Tuu0510(n,m,k) :
    return( (k*(3*n+k)*binomial(2*n+k,n)*binomial(2*(2*n+k)+2*n+2*m,m))/((2*n+k)*(3*n+m+k))  )
#----------------------------------------------------------------------------
def  Tuu0511(n,m,k) :
    return( (k*binomial(k-n,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0512(n,m,k) :
    return( binomial(k-2*n,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0513(n,m,k) :
    return( binomial(k,n)*binomial(k-3*n,m)  )
#----------------------------------------------------------------------------
def  Tuu0514(n,m,k) :
  if  n==0  :
      return( binomial(k,m)  )
  else:
      return( (k*(binomial(k-4*n,m))*(binomial(k-n-1,n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0515(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
      return( -(k*(binomial(k-4*n,m))*(binomial(k-n-1,n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0516(n,m,k) :
    return( (k*binomial(2*k,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0517(n,m,k) :
    return( (k*binomial(2*(k-n),m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0518(n,m,k) :
    return( binomial(2*(k-2*n),m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0519(n,m,k) :
    return( binomial(k,n)*binomial(2*(k-3*n),m)  )
#----------------------------------------------------------------------------
def  Tuu0520(n,m,k) :
  if  n==0  :
      return( binomial(2*k,m)  )
  else:
      return( (k*(binomial(2*(k-4*n),m))*(binomial(k-n-1,n-1)))/(n)  )
#----------------------------------------------------------------------------
def  Tuu0521(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
      return( -(k*(binomial(2*(k-4*n),m))*(binomial(k-n-1,n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0522(n,m,k) :
    return( (k*binomial((-n)+m+k-1,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0523(n,m,k) :
    return( binomial((-2*n)+m+k-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0524(n,m,k) :
    return( binomial(k,n)*binomial(3*k-2*n,m)  )
#----------------------------------------------------------------------------
def  Tuu0525(n,m,k) :
    return( binomial(k,n)*binomial(3*k-n,m)  )
#----------------------------------------------------------------------------
def  Tuu0526(n,m,k) :
    return( binomial(k,n)*binomial((-3*n)+m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0527(n,m,k) :
  if  n==0  :
      return( binomial(m+k-1,m)  )
  else:
      return( (k*(binomial(-4*n+m+k-1,m))*(binomial(k-n-1,n-1)))/(n)  )
#----------------------------------------------------------------------------
def  Tuu0528(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
      return( -(k*(binomial(-4*n+m+k-1,m))*(binomial(k-n-1,n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0529(n,m,k) :
    return( (k*binomial(2*(k-n)+m-1,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0530(n,m,k) :
    return( binomial(2*(k-2*n)+m-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0531(n,m,k) :
    return( binomial(k,n)*binomial(2*(k-3*n)+m-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0532(n,m,k) :
  if  n==0  :
      return( binomial(m+2*k-1,m)  )
  else:
      return( (k*(binomial(2*(k-4*n)+m-1,m))*(binomial(k-n-1,n-1)))/(n)  )
#----------------------------------------------------------------------------
def  Tuu0533(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
      return( -(k*(binomial(2*(k-4*n)+m-1,m))*(binomial(k-n-1,n-1)))/(n)  )
#----------------------------------------------------------------------------
def  Tuu0534(n,m,k) :
    return( (k**2*binomial(2*m+k-1,m)*binomial(3*n+k-1,n))/((m+k)*(2*n+k))  )
#----------------------------------------------------------------------------
def  Tuu0535(n,m,k) :
  if  m==0  :
      return( binomial(2*n+k-1,n)*k/(n+k)  )
  else:
      return( (k*(binomial(n-m-k-1,m-1)*(-1)**(m-1))/m*(k-n)*(binomial(2*n+k-1,n)))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0536(n,m,k) :
  if  m==0  :
      return( binomial(n+k-1,n)  )
  else:
      return( ((binomial(2*n-m-k-1,m-1)*(-1)**(m-1))/m*(k-2*n)*(binomial(n+k-1,n)))  )
#----------------------------------------------------------------------------
def  Tuu0537(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( ((binomial(3*n-m-k-1,m-1)*(-1)**(m-1))/m*(k-3*n)*(binomial(k,n)))  )
#----------------------------------------------------------------------------
def  Tuu0538(n,m,k) :
    return( (k**2*binomial(2*m+2*k,m)*binomial(3*n+k-1,n))/((m+k)*(2*n+k))  )
#----------------------------------------------------------------------------
def  Tuu0539(n,m,k) :
  if  m==0  :
      return( binomial(n+k-1,n)  )
  else:
      return( ((binomial(2*n-m-k-1,m-1)*(-1)**(m-1))/m*(k-2*n)*(binomial(n+k-1,n)))  )
#----------------------------------------------------------------------------
def  Tuu0540(n,m,k) :
  if  m==0  :
      return( binomial(n+k-1,n)  )
  else:
      return( (2*(binomial(2*k-4*n+2*m-1,m-1))/m*(k-2*n)*(binomial(n+k-1,n)))  )
#----------------------------------------------------------------------------
def  Tuu0541(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( (2*(binomial(2*k-6*n+2*m-1,m-1))/m*(k-3*n)*(binomial(k,n)))  )
#----------------------------------------------------------------------------
def  Tuu0542(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( binomial(k-n-1,n-1)*k/(n)  )
  else:
    if  n==0  :
        return( k/(k+m)*binomial(2*m+2*k,m)  )
    else:
        return( (2*(binomial(2*k-8*n+2*m-1,m-1))/m*(k-4*n)*(binomial(k-n-1,n-1))/n)*k  )
#----------------------------------------------------------------------------
def  Tuu0543(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
    if  m==0  :
        return( -binomial(k-n-1,n-1)*k/(n)  )
    else:
        return( -(2*(binomial(2*k-8*n+2*m-1,m-1))/m*(k-4*n)*(binomial(k-n-1,n-1))/n)*k  )
#----------------------------------------------------------------------------
def  Tuu0544(n,m,k) :
    return( (k**2*binomial(3*m+k-1,m)*binomial(3*n+k-1,n))/((2*m+k)*(2*n+k))  )
#----------------------------------------------------------------------------
def  Tuu0545(n,m,k) :
    if m==0:
        return ( binomial(2*n+k-1,n)*k/(n+k)) 
    return( (k*(binomial(2*n+k-1,n)))/(n+k)*((k-n)*(binomial(n-2*m-k-1,m-1)*(-1)**(m-1)))/(m)  )
#----------------------------------------------------------------------------
def  Tuu0546(n,m,k) :
  if  m==0  :
      return( binomial(n+k-1,n)  )
  else:
      return( ((binomial(n+k-1,n)))*((k-2*n)*(binomial(2*n-2*m-k-1,m-1)*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0547(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( ((binomial(k,n)))*((k-3*n)*(binomial(3*n-2*m-k-1,m-1)*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0548(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( k*binomial(k-n-1,n-1)/n  )
  else:
    if  n==0  :
        return( (k*(binomial(3*m+k-1,m)))/(2*m+k)  )
    else:
        return( k*((binomial(k-n-1,n-1)/n))*((k-4*n)*(binomial(4*n-2*m-k-1,m-1)*(-1)**(m-1)))/(m)  )
#----------------------------------------------------------------------------
def  Tuu0549(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
    if  m==0  :
        return( -k*binomial(k-n-1,n-1)/n  )
    else:
        return( -k*((binomial(k-n-1,n-1)/n))*((k-4*n)*(binomial(4*n-2*m-k-1,m-1)*(-1)**(m-1)))/(m)  )
#----------------------------------------------------------------------------
def  Tuu0550(n,m,k) :
  if  n==0  :
      return( binomial(k+n,m)*k/(n+k)  )
  else:
      return( k*binomial(k+n,m)*(((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0551(n,m,k) :
    return( binomial(k,n)*binomial(2*n+k,m)  )
#----------------------------------------------------------------------------
def  Tuu0552(n,m,k) :
    return( binomial(n+k-1,n)*binomial(3*n+k,m)  )
#----------------------------------------------------------------------------
def  Tuu0553(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(4*n+k,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0554(n,m,k) :
  if  n==0  :
      return( binomial(k,m)  )
  else:
      return( binomial(k,m)*(k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0555(n,m,k) :
  if  n==0  :
      return( binomial(2*k,m)  )
  else:
      return( binomial(2*k,m)*(k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0556(n,m,k) :
  if  n==0  :
      return( binomial(2*k+2*n,m)*k/(n+k)  )
  else:
      return( binomial(2*k+2*n,m)*(k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0557(n,m,k) :
    return( binomial(k,n)*binomial(4*n+2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0558(n,m,k) :
    return( (k*binomial(n+k,n)*binomial(6*n+2*k,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0559(n,m,k) :
    return( (k*binomial(2*n+k,n)*binomial(8*n+2*k,m))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0560(n,m,k) :
  if  n==0  :
      return( binomial(m+k-1,m)  )
  else:
      return( binomial(m+k-1,m)*(k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0561(n,m,k) :
  if  n==0  :
      return( binomial(m+k+n-1,m)*k/(n+k)  )
  else:
      return( binomial(m+n+k-1,m)*(k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0562(n,m,k) :
    return( binomial(k,n)*binomial(2*n+m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0563(n,m,k) :
    return( binomial(n+k-1,n)*binomial(3*n+m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0564(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(4*n+m+k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0565(n,m,k) :
  if  n==0  :
      return( binomial(m+2*k-1,m)  )
  else:
      return( binomial(m+2*k-1,m)*(k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0566(n,m,k) :
  if  n==0  :
      return( binomial(m+2*k+2*n-1,m)*k/(n+k)  )
  else:
      return( binomial(m+2*k+2*n-1,m)*(k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0567(n,m,k) :
    return( binomial(k,n)*binomial(4*n+m+2*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0568(n,m,k) :
    return( binomial(n+k-1,n)*binomial(6*n+m+2*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0569(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(8*n+m+2*k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0570(n,m,k) :
  if  n==0  :
      return( k/(m+k)*binomial(2*m+k-1,m)  )
  else:
      return( k/(m+k)*binomial(2*m+k-1,m)*(k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0571(n,m,k) :
  if  n==0  :
      return( k/(m+k+n)*binomial(2*m+k+n-1,m)  )
  else:
      return( k/(m+k+n)*binomial(2*m+k+n-1,m)*((k+n)*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0572(n,m,k) :
    return( (binomial(k,n)*(2*n+k)*binomial(2*n+2*m+k-1,m))/(2*n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0573(n,m,k) :
    return( ((3*n+k)*binomial(n+k-1,n)*binomial(3*n+2*m+k-1,m))/(3*n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0574(n,m,k) :
    return( (k*(4*n+k)*binomial(2*n+k-1,n)*binomial(4*n+2*m+k-1,m))/((n+k)*(4*n+m+k))  )
#----------------------------------------------------------------------------
def  Tuu0575(n,m,k) :
  if  n==0  :
      return( k/(m+k)*binomial(2*m+2*k,m)  )
  else:
      return( k/(m+k)*binomial(2*m+2*k,m)*(k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0576(n,m,k) :
  if  n==0  :
      return( (k)/(n+m+k)*binomial(2*m+2*k+2*n,m)  )
  else:
      return( k/(n+m+k)*binomial(2*m+2*k+2*n,m)*((k+n)*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0577(n,m,k) :
    return( (binomial(k,n)*(2*n+k)*binomial(4*n+2*m+2*k,m))/(2*n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0578(n,m,k) :
    return( ((3*n+k)*binomial(n+k-1,n)*binomial(2*(n+k)+4*n+2*m,m))/(3*n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0579(n,m,k) :
    return( (k*(4*n+k)*binomial(2*n+k-1,n)*binomial(8*n+2*m+2*k,m))/((n+k)*(4*n+m+k))  )
#----------------------------------------------------------------------------
def  Tuu0580(n,m,k) :
  if  n==0  :
      return( 4**m*(binomial(m+k/2-1,m))  )
  else:
      return( 4**m*binomial(m+k/2-1,m)*(k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0581(n,m,k) :
  if  n==0  :
      return( 4**m*(binomial(m+(k+n)/2-1,m))*k/(k+n)  )
  else:
      return( 4**m*binomial(m+(k+n)/2-1,m)*(k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0582(n,m,k) :
    return( binomial(k,n)*4**m*binomial(n+m+k/2-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0583(n,m,k) :
    return( 4**m*binomial(n+k-1,n)*binomial((n+k)/2+n+m-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0584(n,m,k) :
    return( (k*4**m*binomial(2*n+k-1,n)*binomial((2*n+k)/2+n+m-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0585(n,m,k) :
  if  n==0  :
      return( (k*(binomial(3*m+k-1,m)))/(2*m+k)  )
  else:
      return( (k*(binomial(3*m+k-1,m)))/(2*m+k)*(k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0586(n,m,k) :
  if  n==0  :
      return( (k*(binomial(3*m+k+n-1,m)))/(2*m+k+n)  )
  else:
      return( (k*(binomial(3*m+k+n-1,m)))/(2*m+n+k)*((k+n)*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0587(n,m,k) :
    return( (binomial(k,n)*(2*n+k)*binomial(2*n+3*m+k-1,m))/(2*n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0588(n,m,k) :
    return( ((3*n+k)*binomial(n+k-1,n)*binomial(3*n+3*m+k-1,m))/(3*n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0589(n,m,k) :
    return( (k*(4*n+k)*binomial(2*n+k-1,n)*binomial(4*n+3*m+k-1,m))/((n+k)*(4*n+2*m+k))  )
#----------------------------------------------------------------------------
def  Tuu0590(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( (k*((binomial(2*m-k-1,m-1))*(-1)**(m-1)))/m  )
  else:
    if  m==0  :
        return( k*((binomial(3*n-k-1,n-1))*(-1)**(n-1))/n  )
    else:
        return( ((k*((binomial(2*m-k-1,m-1))*(-1)**(m-1)))/m)*(k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0591(n,m,k) :
  if  n==0  :
    if  m==0  :
        return( 1  )
    else:
        return( (k*((binomial(2*m-n-k-1,m-1))*(-1)**(m-1)))/m  )
  else:
    if  m==0  :
        return( k*((binomial(2*n-k-1,n-1))*(-1)**(n-1))/n  )
    else:
        return( ((k*((binomial(2*m-n-k-1,m-1))*(-1)**(m-1)))/m)*((k+n)*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0592(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( binomial(k,n)*((2*n+k)*((binomial(2*m-2*n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0593(n,m,k) :
  if  m==0  :
      return( binomial(k+n-1,n)  )
  else:
      return( binomial(k+n-1,n)*((3*n+k)*((binomial(2*m-3*n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0594(n,m,k) :
  if  m==0  :
      return( binomial(2*n+k-1,n)*k/(n+k)  )
  else:
      return( binomial(2*n+k-1,n)*k/(n+k)*((4*n+k)*((binomial(2*m-4*n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0595(n,m,k) :
  if  n==0  :
      return( (1+(-1)**m)/2*binomial(k,m/2)  )
  else:
      return( (1+(-1)**m)/2*binomial(k,m/2)*(k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0596(n,m,k) :
  if  n==0  :
      return( (1+(-1)**m)/2*binomial(k+n,m/2)*k/(n+k)  )
  else:
      return( (1+(-1)**m)/2*binomial(k+n,m/2)*(k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0597(n,m,k) :
    return( (binomial(k,n)*((-1)**m+1)*binomial(2*n+k,m/2))/2  )
#----------------------------------------------------------------------------
def  Tuu0598(n,m,k) :
    return( (((-1)**m+1)*binomial(n+k-1,n)*binomial(3*n+k,m/2))/2  )
#----------------------------------------------------------------------------
def  Tuu0599(n,m,k) :
    return( (k*((-1)**m+1)*binomial(2*n+k-1,n)*binomial(4*n+k,m/2))/(2*(n+k))  )
#----------------------------------------------------------------------------
def  Tuu0600(n,m,k) :
  if  m==0  :
      return( k*(binomial(3*n+k-1,n))/(2*n+k)  )
  else:
      return( k*(binomial(3*n+k-1,n))/(2*n+k)*(k*((binomial(2*m-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0601(n,m,k) :
  if  m==0  :
      return( k*(binomial(2*n+k-1,n))/(n+k)  )
  else:
      return( k*(binomial(2*n+k-1,n))/(n+k)*((k-n)*((binomial(2*m+n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0602(n,m,k) :
  if  m==0  :
      return( (binomial(n+k-1,n))  )
  else:
      return( (binomial(n+k-1,n))*((k-2*n)*((binomial(2*m+2*n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0603(n,m,k) :
  if  m==0  :
      return( (binomial(k,n))  )
  else:
      return( (binomial(k,n))*((k-3*n)*((binomial(2*m+3*n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0604(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( k*(binomial(k-n-1,n-1))/n  )
  else:
    if  n==0  :
        return( ((k-4*n)*((binomial(2*m+4*n-k-1,m-1))*(-1)**(m-1)))/m  )
    else:
        return( k*(binomial(k-n-1,n-1)/n)*((k-4*n)*((binomial(2*m+4*n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0605(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
    if  m==0  :
        return( -k*(binomial(k-n-1,n-1))/n  )
    else:
        return( -(k*(binomial(k-n-1,n-1))/n*((k-4*n)*((binomial(2*m+4*n-k-1,m-1))*(-1)**(m-1))))/m  )
#----------------------------------------------------------------------------
def  Tuu0606(n,m,k) :
    return( (k*4**m*binomial(m+k/2-1,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0607(n,m,k) :
    return( (k*4**m*binomial((k-n)/2+m-1,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0608(n,m,k) :
    return( 4**m*binomial((k-2*n)/2+m-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0609(n,m,k) :
    return( binomial(k,n)*4**m*binomial((k-3*n)/2+m-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0610(n,m,k) :
  if  n==0  :
      return( binomial(m+(k)/2-1,m)*4**m  )
  else:
      return( k*((binomial(k-n-1,n-1)/n))*binomial(m+(k-4*n)/2-1,m)*4**m  )
#----------------------------------------------------------------------------
def  Tuu0611(n,m,k) :
  if  n < k  :
      return( 0  )
  else:
      return( -(k*4**m*binomial((k-4*n)/2+m-1,m)*binomial((-n)+k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0612(n,m,k) :
    if m==0:
        return (binomial(k,n))
    return( (k*binomial(k,n)*(-1)**(m-1)*binomial(3*m-k-1,m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0613(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( k*binomial(k-n-1,n-1)/n  )
  else:
    if  n==0  :
        return( ((k-n)*((binomial(3*m+n-k-1,m-1))*(-1)**(m-1)))/m  )
    else:
        return( k*binomial(k-n-1,n-1)/n*((k-n)*((binomial(3*m+n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0614(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
    if  m==0  :
        return( -k*binomial(k-n-1,n-1)/n  )
    else:
        return( -k*binomial(k-n-1,n-1)/n*((k-n)*((binomial(3*m+n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0615(n,m,k) :
  if  m==0  :
      return( binomial(n+k-1,n)  )
  else:
      return( binomial(n+k-1,n)*(k*((binomial(3*m-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0616(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( binomial(k,n)*((k-n)*((binomial(3*m+n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0617(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( k*binomial(k-n-1,n-1)/n  )
  else:
    if  n==0  :
        return( ((k-2*n)*((binomial(3*m+2*n-k-1,m-1))*(-1)**(m-1)))/m  )
    else:
        return( k*binomial(k-n-1,n-1)/n*((k-2*n)*((binomial(3*m+2*n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0618(n,m,k) :
  if  n<k  :
      return( 0  )
  else:
    if  m==0  :
        return( -k*binomial(k-n-1,n-1)/n  )
    else:
        return( -k*binomial(k-n-1,n-1)/n*((k-2*n)*((binomial(3*m+2*n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0619(n,m,k) :
  if  m==0  :
      return( binomial(n+2*k-1,n)  )
  else:
      return( binomial(n+2*k-1,n)*(k*((binomial(3*m-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0620(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( 2*binomial(2*n-2*k-1,n-1)*k/(n)*(-1)**(n-1)  )
  else:
      return( binomial(2*k-n-1,n)*(k*((binomial(3*m+n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0621(n,m,k) :
  if  n<2*k  :
      return( 0  )
  else:
    if  m==0  :
        return( -2*binomial(2*n-2*k-1,n-1)*k/(n)*(-1)**(n-1)  )
    else:
        return( -binomial(2*k-n-1,n)*(k*((binomial(3*m+n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0622(n,m,k) :
  if  m==0  :
      return( k/(n+k)*binomial(2*n+2*k,n)  )
  else:
      return( k/(n+k)*binomial(2*n+2*k,n)*(k*((binomial(3*m-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0623(n,m,k) :
  if  m==0  :
      return( binomial(2*k,n)  )
  else:
      return( binomial(2*k,n)*((k-n)*((binomial(3*m+n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0624(n,m,k) :
  if  n==0  :
      return( binomial(k,m)*(-1)**k  )
  else:
      return( (-1)**(k+1)*k*binomial((n-k)/2-1,n-1)*binomial(k-n,m)*4**n/(2*n)  )
#----------------------------------------------------------------------------
def  Tuu0625(n,m,k) :
  if  n==0  :
      return( binomial(k,m)  )
  else:
      return( (-1)**(n-1)*k*binomial((n-k)/2-1,n-1)*binomial(k-n,m)*4**n/(2*n)  )
#----------------------------------------------------------------------------
def  Tuu0626(n,m,k) :
  if  n==0  :
      return( binomial(2*k,m)  )
  else:
      return( (-1)**(n-1)*k*binomial((n-k)/2-1,n-1)*binomial(2*k-2*n,m)*4**n/(2*n)  )
#----------------------------------------------------------------------------
def  Tuu0627(n,m,k) :
  if  n==0  :
      return( binomial(2*k,m)*(-1)**k  )
  else:
      return( (-1)**(k+1)*k*binomial((n-k)/2-1,n-1)*binomial(2*k-2*n,m)*4**n/(2*n)  )
#----------------------------------------------------------------------------
def  Tuu0628(n,m,k) :
  if  n==0  :
      return( binomial(m+k-1,m)  )
  else:
      return( (-1)**(n-1)*k*binomial((n-k)/2-1,n-1)*binomial(m+k-n-1,m)*4**n/(2*n)  )
#----------------------------------------------------------------------------
def  Tuu0629(n,m,k) :
  if  n==0  :
      return( binomial(m+k-1,m)*(-1)**k  )
  else:
      return( (-1)**(k+1)*k*binomial((n-k)/2-1,n-1)*binomial(m+k-n-1,m)*4**n/(2*n)  )
#----------------------------------------------------------------------------
def  Tuu0630(n,m,k) :
  if  n==0  :
      return( binomial(m+2*k-1,m)  )
  else:
      return( (-1)**(n-1)*k*binomial((n-k)/2-1,n-1)*binomial(m+2*k-2*n-1,m)*4**n/(2*n)  )
#----------------------------------------------------------------------------
def  Tuu0631(n,m,k) :
  if  n==0  :
      return( binomial(m+2*k-1,m)*(-1)**k  )
  else:
      return( (-1)**(k+1)*k*binomial((n-k)/2-1,n-1)*binomial(m+2*k-2*n-1,m)*4**n/(2*n)  )
#----------------------------------------------------------------------------
def  Tuu0632(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*4**n*binomial(n+k/2-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0633(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( 1/2*4**n*binomial((n-k)/2-1,n-1)*k/n*(-1)**(n-1)  )
  else:
      return( k/m*binomial(n-m-k-1,m-1)*(-1)**(m-1)*4**n*(binomial((n+k)/2-1,n))  )
#----------------------------------------------------------------------------
def  Tuu0634(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( (-1)**k  )
    else:
        return( (-1)**(k-1)/2*4**n*binomial((n-k)/2-1,n-1)*k/n  )
  else:
      return( (-1)**(n-k)*k/m*binomial(n-m-k-1,m-1)*(-1)**(m-1)*4**n*(binomial((n+k)/2-1,n))  )
#----------------------------------------------------------------------------
def  Tuu0635(n,m,k) :
    return( (k*binomial(2*m+2*k,m)*4**n*binomial(n+k/2-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0636(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( 1/2*4**n*binomial((n-k)/2-1,n-1)*k/n*(-1)**(n-1)  )
  else:
      return( 2*k/m*binomial(2*m+2*k-2*n-1,m-1)*4**n*(binomial((n+k)/2-1,n))  )
#----------------------------------------------------------------------------
def  Tuu0637(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( (-1)**k  )
    else:
        return( (-1)**(k-1)/2*4**n*binomial((n-k)/2-1,n-1)*k/n  )
  else:
      return( 2*(-1)**(n-k)*k/m*binomial(2*m-2*n+2*k-1,m-1)*4**n*(binomial((n+k)/2-1,n))  )
#----------------------------------------------------------------------------
def  Tuu0638(n,m,k) :
    return( (k*binomial(3*m+k-1,m)*4**n*binomial(n+k/2-1,n))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0639(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( 1/2*4**n*binomial((n-k)/2-1,n-1)*k/n*(-1)**(n-1)  )
  else:
      return( k/m*4**n*((binomial(n-2*m-k-1,m-1)))*(-1)**(m-1)*(binomial((n+k)/2-1,n))  )
#----------------------------------------------------------------------------
def  Tuu0640(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( (-1)**k  )
    else:
        return( (-1)**(k-1)/2*4**n*binomial((n-k)/2-1,n-1)*k/n  )
  else:
      return( (-1)**(n-k)*k/m*((binomial(n-2*m-k-1,m-1)))*(-1)**(m-1)*4**n*(binomial((n+k)/2-1,n))  )
#----------------------------------------------------------------------------
def  Tuu0641(n,m,k) :
  if  m==0  :
      return( 4**n*binomial(n+k/2-1,n)  )
  else:
      return( 4**n*binomial(n+k/2-1,n)*(k*((binomial(2*m-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0642(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( 1/2*4**n*binomial((n-k)/2-1,n-1)*k/n*(-1)**(n-1)  )
  else:
      return( 4**n*binomial((n+k)/2-1,n)*(k*((binomial(2*m+n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0643(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( (-1)**k  )
    else:
        return( 1/2*4**n*binomial((n-k)/2-1,n-1)*k/n*(-1)**(k-1)  )
  else:
      return( 4**n*binomial((n+k)/2-1,n)*(k*((binomial(2*m+n-k-1,m-1))*(-1)**(n+m+k-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0644(n,m,k) :
  if  m==0  :
      return( binomial(k+n-1,n)  )
  else:
      return( (k*(binomial(k+n,n))*(binomial(2*m-n-k-1,m-1)))/(m)*(-1)**(m-1)  )
#----------------------------------------------------------------------------
def  Tuu0645(n,m,k) :
  if  m==0  :
      return( binomial(2*n+k-1,n)*k/(n+k)  )
  else:
      return( (k*(binomial(2*n+k,n))*(binomial(2*m-2*n-k-1,m-1)))/(m)*(-1)**(m-1)  )
#----------------------------------------------------------------------------
def  Tuu0646(n,m,k) :
  if  m==0  :
      return( binomial(2*n+k-1,n)*k/(n+k)  )
  else:
      return( (k*(binomial(2*n+k,n))*(binomial(2*m-2*n-k-1,m-1)))/(m)*(-1)**(m-1)  )
#----------------------------------------------------------------------------
def  Tuu0647(n,m,k) :
  if  m==0  :
      return( binomial(2*(k+n),n)*k/(k+n)  )
  else:
      return( ((binomial(2*k+2*n,n)*k)*(binomial(2*m-n-k-1,m-1)))/(m)*(-1)**(m-1)  )
#----------------------------------------------------------------------------
def  Tuu0648(n,m,k) :
  if  m+n==0  :
      return( 1  )
  else:
    if  n==0  :
        return( (k*((binomial(2*m-k-1,m-1))*(-1)**(m-1)))/m  )
    else:
      if  m==0  :
          return( (k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
      else:
          return( (k*((binomial(2*m-k-1,m-1))*(-1)**(m-1)))/m*(k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0649(n,m,k) :
  if  m==0 and n==0  :
      return( 1  )
  else:
    if  n==0 and m>0  :
        return( (k*((binomial(2*m-n-k-1,m-1))*(-1)**(m-1)))/m  )
    else:
      if  m==0 and n>0  :
          return( (k*((binomial(n-k-1,n-1))*(-1)**(n-1)))/n  )
      else:
          return( (k*((binomial(2*m-n-k-1,m-1))*(-1)**(m-1)))/m*((k+n)*((binomial(n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0650(n,m,k) :
  if  m==0 and n==0  :
      return( 1  )
  else:
    if  n==0 and m>0  :
        return( (k*((binomial(2*m-2*n-k-1,m-1))*(-1)**(m-1)))/m  )
    else:
      if  m==0 and n>0  :
          return( (k*((binomial(-k-1,n-1))*(-1)**(n-1)))/n  )
      else:
          return( (k*((binomial(2*m-2*n-k-1,m-1))*(-1)**(m-1)))/m*((k+2*n)*((binomial(-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0651(n,m,k) :
  if  m==0 and n==0  :
      return( 1  )
  else:
    if  n==0 and m>0  :
        return( (k*((binomial(2*m-3*n-k-1,m-1))*(-1)**(m-1)))/m  )
    else:
      if  m==0 and n>0  :
          return( (k*((binomial(-n-k-1,n-1))*(-1)**(n-1)))/n  )
      else:
          return( (k*((binomial(2*m-3*n-k-1,m-1))*(-1)**(m-1)))/m*((k+3*n)*((binomial(-n-k-1,n-1))*(-1)**(n-1)))/n  )
#----------------------------------------------------------------------------
def  Tuu0652(n,m,k) :
  if  n==0  :
      return( (k*(binomial(3*m+k-1,m)))/(2*m+k)  )
  else:
      return( (k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n*(k*(binomial(3*m+k-1,m)))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0653(n,m,k) :
    return( (binomial(k,n)*(n+k)*binomial(n+3*m+k-1,m))/(n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0654(n,m,k) :
    return( (k*(2*n+k)*binomial(n+k,n)*binomial(2*n+3*m+k-1,m))/((n+k)*(2*n+2*m+k))  )
#----------------------------------------------------------------------------
def  Tuu0655(n,m,k) :
    return( (k*(3*n+k)*binomial(2*n+k,n)*binomial(3*n+3*m+k-1,m))/((2*n+k)*(3*n+2*m+k))  )
#----------------------------------------------------------------------------
def  Tuu0656(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( (k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n  )
  else:
    if  n==0  :
        return( (k*((binomial(3*m-k-1,m-1))*(-1)**(m-1)))/m  )
    else:
        return( (k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n*(k*((binomial(3*m-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0657(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( (k+n)*(binomial(k,n))*binomial(3*m-n-k-1,m-1)*(-1)**(m-1)/m  )
#----------------------------------------------------------------------------
def  Tuu0658(n,m,k) :
  if  m==0  :
      return( binomial(n+k-1,n)  )
  else:
      return( (k+2*n)*(binomial(n+k-1,n))*binomial(3*m-2*n-k-1,m-1)*(-1)**(m-1)/m  )
#----------------------------------------------------------------------------
def  Tuu0659(n,m,k) :
  if  m==0  :
      return( binomial(2*n+k-1,n)*k/(n+k)  )
  else:
      return( k/(n+k)*(k+3*n)*(binomial(2*n+k-1,n))*binomial(3*m-3*n-k-1,m-1)*(-1)**(m-1)/m  )
#----------------------------------------------------------------------------
def  Tuu0660(n,m,k) :
  if  n==0  :
      return( 4**m*binomial(m+k/2-1,m)  )
  else:
      return( k*binomial(2*n-k-1,n-1)*(-1)**(n-1)/n*4**m*binomial(m+k/2-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0661(n,m,k) :
    return( binomial(k,n)*4**m*binomial((n+k)/2+m-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0662(n,m,k) :
    return( 4**m*binomial(n+k-1,n)*binomial(n+m+k/2-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0663(n,m,k) :
    return( (k*4**m*binomial(2*n+k-1,n)*binomial((n+k)/2+n+m-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0664(n,m,k) :
  if  n==0  :
      return( binomial(n,m)  )
  else:
      return( (k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n*(binomial(n,m))  )
#----------------------------------------------------------------------------
def  Tuu0665(n,m,k) :
    return( (k*(-1)**(n+k)*binomial(n+k,m)*binomial(2*n+k-1,n+k-1))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0666(n,m,k) :
    return( (k*(-1)**n*binomial(2*(n+k),m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0667(n,m,k) :
    return( binomial(2*k,m)*(-1)**n*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0668(n,m,k) :
    return( binomial(k,n)*binomial(n+m-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0669(n,m,k) :
  if  n==0  :
      return( binomial(2*n+m-1,m)  )
  else:
      return( (k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n*(binomial(2*n+m-1,m))  )
#----------------------------------------------------------------------------
def  Tuu0670(n,m,k) :
    return( (k*4**m*binomial(m+k/2-1,m)*binomial(2*n+2*k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0671(n,m,k) :
    return( binomial(2*k,n)*4**m*binomial((k-n)/2+m-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0672(n,m,k) :
    return( (k*(-1)**(n+k-1)*binomial(n+m+k-1,m)*binomial(2*n+k-1,n+k-1))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0673(n,m,k) :
    return( binomial(k,n)*binomial(2*n+m-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0674(n,m,k) :
    if n==0:
        return (binomial(2*n+m-1,m))
    return( (k*(-1)**(n-1)*binomial(2*n-k-1,n-1)*binomial(2*n+m-1,m))/n  )
#----------------------------------------------------------------------------
def  Tuu0675(n,m,k) :
    return( (k*(-1)**n*binomial(2*n+k-1,n+k-1)*binomial(2*n+m+2*k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0676(n,m,k) :
    return( binomial(m+2*k-1,m)*(-1)**n*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0677(n,m,k) :
    if n+m==0:
        return 1
    return( (binomial(k,n)*n*binomial(n+2*m-1,m))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0678(n,m,k) :
  if  n+m==0  :
      return( 1  )
  else:
      return( (k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/(n+m)*binomial(2*m+n-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0679(n,m,k) :
    return( (k*(-1)**(n+k)*binomial(n+2*m+k-1,m)*binomial(2*n+k-1,n+k-1))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0680(n,m,k) :
    return( binomial(k,n)*4**m*binomial(n/2+m-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0681(n,m,k) :
  if  n==0  :
      return( binomial(m+n/2-1,m)*4**m  )
  else:
      return( (k*((binomial(2*n-k-1,n-1))*(-1)**(n-1)))/n*binomial(m+n/2-1,m)*4**m  )
#----------------------------------------------------------------------------
def  Tuu0682(n,m,k) :
    return( (k*4**m*(-1)**(n-k)*binomial(2*n+k-1,n+k-1)*binomial((n+k)/2+m-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0683(n,m,k) :
    if n+m==0:
        return 1
    return( (binomial(k,n)*n*binomial(2*n+2*m,m))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0684(n,m,k) :
    if n+m==0:
        return 1
    return( (k*(-1)**(n-1)*binomial(2*n-k-1,n-1)*binomial(2*n+2*m,m))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0685(n,m,k) :
    return( (k*(-1)**(n-k)*binomial(2*n+k-1,n+k-1)*binomial(2*n+2*m+2*k,m))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0686(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( binomial(k,n)*n*((binomial(2*m-n-1,m-1))*(-1)**(m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0687(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( binomial(k-n-1,n-1)*k/n  )
  else:
      return( k*binomial(k-n-1,n-1)*((binomial(2*m-n-1,m-1))*(-1)**(m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0688(n,m,k) :
  if  m==0  :
      return( binomial(2*n+k-1,n+k-1)*(-1)**(n-k)*k/(n+k)  )
  else:
      return( k*(binomial(2*n+k-1,n+k-1))*(-1)**(n-k)*((binomial(2*m-n-k-1,m-1))*(-1)**(m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0689(n,m,k) :
    if n+m==0:
        return 1
    return( (binomial(k,n)*n*binomial(n+3*m-1,m))/(n+2*m)  )
#----------------------------------------------------------------------------
def  Tuu0690(n,m,k) :
    if n+m==0:
        return 1
    return( (k*binomial((-n)+k-1,n-1)*binomial(n+3*m-1,m))/(n+2*m)  )
#----------------------------------------------------------------------------
def  Tuu0691(n,m,k) :
  if  m+n==0  :
      return( (-1)**k  )
  else:
      return( k*binomial(2*n+k-1,n+k-1)*(-1)**(n-k)*((binomial(3*m+n+k-1,m)))/(2*m+n+k)  )
#----------------------------------------------------------------------------
def  Tuu0692(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( binomial(k,n)*(n*((binomial(3*m-n-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0693(n,m,k) :
  if  m==0  :
    if  n==0  :
        return( 1  )
    else:
        return( k*binomial(k-n-1,n-1)/n  )
  else:
      return( k*binomial(k-n-1,n-1)*(((binomial(3*m-n-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0694(n,m,k) :
  if  m==0  :
      return( k*(binomial(2*n+k-1,n+k-1))*(-1)**(n-k)/(n+k)  )
  else:
      return( k*binomial(2*n+k-1,n+k-1)*(-1)**(n-k)*(((binomial(3*m-n-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0695(n,m,k) :
    return( binomial(n+k-1,n)*binomial(2*n+m-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0696(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(2*n+m-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0697(n,m,k) :
    return( binomial(n+k-1,n)*binomial(2*n+3*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0698(n1,m1,k) :
    if n1+m1==0:
        return 1
    return( k*n1*binomial(n+2*m-1,m).subs([(m,m1),(n,n1)])*binomial(2*n+k-1,n).subs([(n,n1)])/((n1+k)*(n1+m1))  )
#----------------------------------------------------------------------------
def  Tuu0699(n,m,k) :
    if n+m==0:
        return 1
    return( (k*n*binomial(2*n+k-1,n)*binomial(2*n+2*m,m))/((n+k)*(n+m))  )
#----------------------------------------------------------------------------
def  Tuu0700(n,m,k) :
    if n+m==0:
        return 1
    return( (n*binomial(n+k-1,n)*binomial(2*n+2*m,m))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0701(n,m,k) :
    if n+m==0:
        return 1
    return( (n*binomial(n+k-1,n)*binomial(n+2*m-1,m))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0702(n,m,k) :
    return( 4**m*binomial(int(n/2)+m-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0703(n,m,k) :
    return( Tsqrt(n,k)*binomial(k,m)  )
#----------------------------------------------------------------------------
def  Tuu0704(n,m,k) :
    return( k*Tsqrt(n,m+k)*binomial(m+k,m)/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0705(n,m,k) :
    return( k*Tsqrt(n,2*m+k)*binomial(2*m+k,m)/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0706(n,m,k) :
    return( Tsqrt(n,k)*binomial(2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0707(n,m,k) :
    return( k*Tsqrt(n,m+k)*binomial(2*m+2*k,m)/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0708(n,m,k) :
    return( k*Tsqrt(n,k)*binomial(m+2*k-1,m)/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0709(n,m,k) :
    return( Tsqrt(n,m)*binomial(k,n)  )
#----------------------------------------------------------------------------
def  Tuu0710(n,m,k) :
    return( k*Tsqrt(n,k+n)*binomial(n+k,m)/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0711(n,m,k) :
    return( k/(m+k)*Tsqrt(m,n)*binomial(k+m,n)  )
#----------------------------------------------------------------------------
def  Tuu0712(n,m,k) :
    return( Tsqrt(m,n+k)*binomial(k,n)  )
#----------------------------------------------------------------------------
def  Tuu0713(n,m,k) :
    return( Tsqrt(m,n)*k/(n+k)*binomial(2*n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0714(n,m,k) :
    return( Tsqrt(m,n)*k/(n+k)*binomial(2*n+2*k,n)  )
#----------------------------------------------------------------------------
def  Tuu0715(n,m,k) :
    return( Tsqrt(m,n)*TA271825(n,k)  )
#----------------------------------------------------------------------------
def  Tuu0716(n,m,k) :
    return( Tsqrt(m,n)*TA000984(m,k)  )
#----------------------------------------------------------------------------
def  Tuu0717(n,m,k) :
    return( k/(n+k)*Tsqrt(m,2*n+k)*binomial(n+k,n)  )
#----------------------------------------------------------------------------
def  Tuu0718(n,m,k) :
    return( k/(2*n+k)*Tsqrt(m,3*n+k)*binomial(3*n+k,n)  )
#----------------------------------------------------------------------------
def  Tuu0719(n,m,k) :
    return( k/(n+k)*Tsqrt(m,n+k)*TLeftA271825(n,k+n)  )
#----------------------------------------------------------------------------
def  Tuu0720(n,m,k) :
    return( k/(2*n+k)*Tsqrt(m,2*n+k)*TLeftA271825(n,k+2*n)  )
#----------------------------------------------------------------------------
def  Tuu0721(n,m,k) :
    return( k/(3*n+k)*Tsqrt(m,3*n+k)*TLeftA271825(n,k+3*n)  )
#----------------------------------------------------------------------------
def  Tuu0722(n,m,k) :
    return( k/(4*n+k)*Tsqrt(m,4*n+k)*TLeftA271825(n,k+4*n)  )
#----------------------------------------------------------------------------
def  Tuu0723(n,m,k) :
    return( (k*((-1)**m+1)*binomial(m+k,n)*binomial((-n)+m+k,int(m/2)))/(2*(m+k))  )
#----------------------------------------------------------------------------
def  Tuu0724(n,m,k) :
    return( (k*binomial(2*n+2*k,n)*binomial(3*n+4*k,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0725(n,m,k) :
    return( binomial(n+k-1,n)*binomial(n+4*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0726(n,m,k) :
    return( binomial(n+k-1,n)*binomial(n+3*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0727(n,m,k) :
    return( binomial(k,n)*binomial(2*k-n,m)  )
#----------------------------------------------------------------------------
def  Tuu0728(n,m,k) :
    if n==0:
        return (binomial(k,m))
    return( (2*k*binomial(k,m)*(-1)**(n-1)*binomial(3*n-2*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0729(n,m,k) :
    return( binomial(2*k,n)*binomial(n+k,m)  )
#----------------------------------------------------------------------------
def  Tuu0730(n,m,k) :
    return( binomial(3*k,n)*binomial(n+k,m)  )
#----------------------------------------------------------------------------
def  Tuu0731(n,m,k) :
    return( (k*binomial(2*n+k,m)*binomial(2*n+2*k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0732(n,m,k) :
  if  n==0  :
      return( binomial(m+k-1,m)  )
  else:
      return( (2*k*((binomial(3*n-2*k-1,n-1))*(-1)**(n-1)))/n*binomial(m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0733(n,m,k) :
    return( binomial(2*k,n)*binomial(n+m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0734(n,m,k) :
    return( (k*binomial(2*n+2*k,n)*binomial(2*n+m+k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0735(n,m,k) :
  if  n==0  :
      return( binomial(2*k,m)  )
  else:
      return( (2*k*((binomial(3*n-2*k-1,n-1))*(-1)**(n-1)))/n*binomial(2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0736(n,m,k) :
    return( binomial(2*k,n)*binomial(2*n+2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0737(n,m,k) :
    return( (k*binomial(2*n+2*k,n)*binomial(4*n+2*k,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0738(n,m,k) :
  if  n==0  :
      return( binomial(m+2*k-1,m)  )
  else:
      return( (2*k*((binomial(3*n-2*k-1,n-1))*(-1)**(n-1)))/n*binomial(m+2*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0739(n,m,k) :
    return( binomial(2*k,n)*binomial(2*n+m+2*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0740(n,m,k) :
    return( (k*binomial(2*n+2*k,n)*binomial(4*n+m+2*k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0741(n,m,k) :
  if  n==0  :
      return( binomial(k,m)  )
  else:
      return( (3*k*((binomial(3*n-3*k-1,n-1))*(-1)**(n-1)))/n*binomial(k,m)  )
#----------------------------------------------------------------------------
def  Tuu0742(n,m,k) :
    return( (3*k*binomial(n+k,m)*binomial(n+3*k,n))/(n+3*k)  )
#----------------------------------------------------------------------------
def  Tuu0743(n,m,k) :
  if  n==0  :
      return( binomial(2*k,m)  )
  else:
      return( (3*k*((binomial(3*n-3*k-1,n-1))*(-1)**(n-1)))/n*binomial(2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0744(n,m,k) :
    return( (3*k*binomial(n+3*k,n)*binomial(2*n+2*k,m))/(n+3*k)  )
#----------------------------------------------------------------------------
def  Tuu0745(n,m,k) :
  if  n==0  :
      return( binomial(k,m)  )
  else:
      return( (4*k*((binomial(3*n-4*k-1,n-1))*(-1)**(n-1)))/n*binomial(k,m)  )
#----------------------------------------------------------------------------
def  Tuu0746(n,m,k) :
    return( (2*k*binomial(n+k,m)*binomial(2*n+4*k,n))/(n+2*k)  )
#----------------------------------------------------------------------------
def  Tuu0747(n,m,k) :
  if  n==0  :
      return( k/(m+k)*binomial(2*m+k-1,m)  )
  else:
      return( (2*k*((binomial(3*n-2*k-1,n-1))*(-1)**(n-1)))/n*k/(m+k)*binomial(2*m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0748(n,m,k) :
    return( (binomial(2*k,n)*(n+k)*binomial(n+2*m+k-1,m))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0749(n,m,k) :
    return( (k*(2*n+k)*binomial(2*n+2*k,n)*binomial(2*n+2*m+k-1,m))/((n+k)*(2*n+m+k))  )
#----------------------------------------------------------------------------
def  Tuu0750(n,m,k) :
  if  n==0  :
      return( k/(m+k)*binomial(2*m+2*k,m)  )
  else:
      return( (2*k*((binomial(3*n-2*k-1,n-1))*(-1)**(n-1)))/n*k/(m+k)*binomial(2*m+2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0751(n,m,k) :
    return( (binomial(2*k,n)*(n+k)*binomial(2*n+2*m+2*k,m))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0752(n,m,k) :
    return( (k*(2*n+k)*binomial(2*n+2*k,n)*binomial(4*n+2*m+2*k,m))/((n+k)*(2*n+m+k))  )
#----------------------------------------------------------------------------
def  Tuu0753(n,m,k) :
    return( TLeftA271825(n,2*k)*TA000984(m,k)  )
#----------------------------------------------------------------------------
def  Tuu0754(n,m,k) :
    return( binomial(2*k,n)*TA000984(m,n+k)  )
#----------------------------------------------------------------------------
def  Tuu0755(n,m,k) :
    return( k/(n+k)*binomial(2*k+2*n,n)*TA000984(m,2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0756(n,m,k) :
    return( (3*k*binomial(n+k,m)*binomial(2*n+3*k,n))/(2*n+3*k)  )
#----------------------------------------------------------------------------
def  Tuu0757(n,m,k) :
    return( (3*k*binomial(n+m+k-1,m)*binomial(2*n+3*k,n))/(2*n+3*k)  )
#----------------------------------------------------------------------------
def  Tuu0758(n,m,k) :
    return( (3*k*binomial(2*n+2*k,m)*binomial(2*n+3*k,n))/(2*n+3*k)  )
#----------------------------------------------------------------------------
def  Tuu0759(n,m,k) :
    return( (3*k*binomial(2*n+3*k,n)*binomial(2*n+m+2*k-1,m))/(2*n+3*k)  )
#----------------------------------------------------------------------------
def  Tuu0760(n,m,k) :
    return( (3*k*(n+k)*binomial(n+2*m+k-1,m)*binomial(2*n+3*k,n))/((n+m+k)*(2*n+3*k))  )
#----------------------------------------------------------------------------
def  Tuu0761(n,m,k) :
    return( (3*k*(n+k)*binomial(2*n+3*k,n)*binomial(2*n+2*m+2*k,m))/((n+m+k)*(2*n+3*k))  )
#----------------------------------------------------------------------------
def  Tuu0762(n,m,k) :
    return( 3*k*binomial(2*n+3*k,n)/(2*n+3*k)*TA271825(m,n+k)  )
#----------------------------------------------------------------------------
def  TA271825(m,k) :
  if  m==0  :
      return( 1  )
  else:
      return( (k*((binomial(2*m-k-1,m-1))*(-1)**(m-1)))/m  )
#----------------------------------------------------------------------------
def  Tuu0763(n,m,k) :
    return( 3*k*binomial(2*n+3*k,n)/(2*n+3*k)*Tsqrt(m,n+k)  )
#----------------------------------------------------------------------------
def  Tuu0764(n,m,k) :
    return( 3*k*binomial(2*n+3*k,n)/(2*n+3*k)*TA000984(m,n+k)  )
#----------------------------------------------------------------------------
def  Tuu0765(n,m,k) :
    return( 3*k*binomial(2*n+3*k,n)/(2*n+3*k)*TLeftA271825(m,n+k)  )
#----------------------------------------------------------------------------
def  Tuu0766(n,m,k) :
    return( (3*k*(n+k)*binomial(n+3*m+k-1,m)*binomial(2*n+3*k,n))/((n+2*m+k)*(2*n+3*k))  )
#----------------------------------------------------------------------------
def  Tuu0767(n,m,k) :
    return( TLeftA271825(n,2*k)*Tsqrt(m,k)  )
#----------------------------------------------------------------------------
def  Tuu0768(n,m,k) :
    return( binomial(2*k,n)*Tsqrt(m,n+k)  )
#----------------------------------------------------------------------------
def  Tuu0769(n,m,k) :
    return( k/(n+k)*binomial(2*k+2*n,n)*Tsqrt(m,2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0770(n,m,k) :
    return( TLeftA271825(n,2*k)*(k*(binomial(3*m+k-1,m)))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0771(n,m,k) :
    return( (binomial(2*k,n)*(n+k)*binomial(n+3*m+k-1,m))/(n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0772(n,m,k) :
    return( (k*(2*n+k)*binomial(2*n+2*k,n)*binomial(2*n+3*m+k-1,m))/((n+k)*(2*n+2*m+k))  )
#----------------------------------------------------------------------------
def  Tuu0773(n,m,k) :
    return( (k*binomial(k,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0774(n,m,k) :
    return( binomial(k-n,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0775(n,m,k) :
    return( (k*binomial(2*k,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0776(n,m,k) :
    return( binomial(2*(k-n),m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0777(n,m,k) :
    return( (k*binomial(m+k-1,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0778(n,m,k) :
    return( binomial((-n)+m+k-1,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0779(n,m,k) :
    return( (k*binomial(m+2*k-1,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0780(n,m,k) :
    return( binomial((-2*n)+m+2*k-1,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0781(n,m,k) :
    return( (k**2*binomial(2*m+k-1,m)*binomial(3*n+2*k-1,n))/((m+k)*(n+k))  )
#----------------------------------------------------------------------------
def  Tuu0782(n,m,k) :
    if m==0:
        return (binomial(n+2*k-1,n))
    return( ((-1)**(m-1)*(k-n)*binomial(n+2*k-1,n)*binomial(n-m-k-1,m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0783(n,m,k) :
    return( (k**2*binomial(2*m+2*k,m)*binomial(3*n+2*k-1,n))/((m+k)*(n+k))  )
#----------------------------------------------------------------------------
def  Tuu0784(n,m,k) :
    if m==0:
        return (binomial(3*n+2*(k-n)-1,n))
    return( (2*binomial((-2*n)+2*m+2*k-1,m-1)*(k-n)*binomial(3*n+2*(k-n)-1,n))/m  )
#----------------------------------------------------------------------------
def  Tuu0785(n,m,k) :
    return( (3*k*binomial(k,m)*binomial(3*n+3*k-1,n))/(2*n+3*k)  )
#----------------------------------------------------------------------------
def  Tuu0786(n,m,k) :
    if n==0:
        return binomial(k-n,m)
    return( (3*k*binomial(k-n,m)*(-1)**(n-1)*binomial(n-3*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0787(n,m,k) :
    return( (3*k*binomial(2*k,m)*binomial(3*n+3*k-1,n))/(2*n+3*k)  )
#----------------------------------------------------------------------------
def  Tuu0788(n,m,k) :
    if n==0:
        return (binomial(2*k-2*n,m))
    return( (3*k*binomial(2*k-2*n,m)*(-1)**(n-1)*binomial(n-3*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0789(n,m,k) :
    return( (k*binomial(m+k,m)*binomial(3*n+2*(m+k)-1,n))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0790(n,m,k) :
    return( (k*binomial(2*m+k,m)*binomial(3*n+4*m+2*k-1,n))/(n+2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0791(n,m,k) :
    return( (k*binomial(2*(m+k),m)*binomial(3*n+2*(m+k)-1,n))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0792(n,m,k) :
    return( (k*binomial(2*m+k-1,m)*binomial(3*n+2*(m+k)-1,n))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0793(n,m,k) :
    return( (2*k*binomial(n+m,m)*binomial(3*(n+m)+2*k-1,n+m))/(2*(n+m)+2*k)  )
#----------------------------------------------------------------------------
def  Tuu0794(n,m,k) :
    return( (k*binomial(n,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0795(n,m,k) :
    return( (k*binomial(n,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0796(n,m,k) :
    return( (k*binomial(n+m-1,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0797(n,m,k) :
    return( (k*binomial(n+m-1,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0798(n,m,k) :
    return( binomial(n,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0799(n,m,k) :
    return( (2*k*(-1)**n*binomial(n+2*k,m)*binomial(2*(n+k)-1,n+2*k-1))/(n+2*k)  )
#----------------------------------------------------------------------------
def  Tuu0800(n,m,k) :
    if n==0 and m==0:
        return 1
    else:
        if n==0:
            return 0
    return( (2*k*(-1)**(n-1)*binomial(n,m)*binomial(2*(n-k)-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0801(n,m,k) :
    return( binomial(n+2*k-1,n)*binomial(n+m-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0802(n,m,k) :
    if n==0 and m==0:
        return 1
    else:
        if n==0:
            return 0
    return( (2*k*(-1)**(n-1)*binomial(n+m-1,m)*binomial(2*n-2*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0803(n,m,k) :
    return( (k*binomial(2*n+2*k,m)*binomial(2*n+2*k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0804(n,m,k) :
    return( (k*binomial(n+m-1,m)*binomial(2*n+2*k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0805(n,m,k) :
    return( (k*binomial(2*n+2*k,n)*binomial(2*n+m-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0806(n,m,k) :
    if m==0 and n==0:
        return 1 
    return( (n*binomial(n+2*k-1,n)*binomial(n+2*m-1,m))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0807(n,m,k) :
    if n==0 and m==0:
        return 1
    return( (k*n*binomial(n+2*m-1,m)*binomial(2*n+2*k,n))/((n+k)*(n+m))  )
#----------------------------------------------------------------------------
def  Tuu0808(n,m,k) :
    return( binomial(k,n)*binomial(2*k,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0809(n,m,k) :
    return( binomial(k,n)*binomial(n+m+k-1,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0810(n,m,k) :
    if n==0 and m==0:
        return 0
    return( (k*binomial(k,n)*binomial(2*(n+m)-k-1,n+m-k))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0811(n,m,k) :
    if n==0 and m==0:
        return 0
    return( (k*binomial(k,n)*binomial(2*n+2*m,n+m-k))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0812(n,m,k) :
  if  2*n+2*m-k <= 0  :
      return( 0  )
  else:
      return( (k*binomial(k,m)*binomial(3*(n+m)-2*k-1,n+m-k))/(2*n+2*m-k)  )
#----------------------------------------------------------------------------
def  Tuu0813(n,m,k) :
    return( (k*binomial(2*n+m-1,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0814(n,m,k) :
    return( (k*binomial(2*n,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0815(n,m,k) :
    return( TA000984(m,n)*binomial(2*k,n)  )
#----------------------------------------------------------------------------
def  Tuu0816(n,m,k) :
    return( TA000984(m,n)*binomial(2*k+2*n,n)*k/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0817(n,m,k) :
    return( TA000984(m,n)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0818(n,m,k) :
    return( TA000984(m,n)*TA000984(n,k)  )
#----------------------------------------------------------------------------
def  Tuu0819(n,m,k) :
    return( Tsqrt(m,n)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0820(n,m,k) :
    return( Tsqrt(m,n)*binomial(2*n+k-1,n)*k/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0821(n,m,k) :
    return( Tsqrt(m,n)*binomial(2*k,n)  )
#----------------------------------------------------------------------------
def  Tuu0822(n,m,k) :
    return( Tsqrt(m,n)*binomial(2*n+2*k,n)*k/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0823(n,m,k) :
    if n+m==0:
        return 1
    return( (binomial(2*k,n)*n*binomial(n+3*m-1,m))/(n+2*m)  )
#----------------------------------------------------------------------------
def  Tuu0824(n,m,k) :
    if n+m==0:
        return 1
    return( (k*n*binomial(n+3*m-1,m)*binomial(2*n+2*k,n))/((n+k)*(n+2*m))  )
#----------------------------------------------------------------------------
def  Tuu0825(n,m,k) :
    if n+m==0:
        return 1
    return( (n*binomial(n+2*k-1,n)*binomial(n+3*m-1,m))/(n+2*m)  )
#----------------------------------------------------------------------------
def  Tuu0826(n,m,k) :
    return( kron_delta(m,n)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0827(n,m,k) :
    return( binomial(n-1,m)*binomial(n-m+k-1,n-m)  )
#----------------------------------------------------------------------------
def  Tuu0828(n,m,k) :
    return( (k*binomial(n-1,m)*binomial(2*n-m+k-1,n-m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0829(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(5*n+4*k,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0830(n,m,k) :
    return( binomial(n+k-1,n)*binomial(n+m+2*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0831(n,m,k) :
    return( binomial(n+k-1,n)*binomial(n+m+3*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0832(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(4*n+m+3*k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0833(n,m,k) :
    return( binomial(k,n)*binomial((-2*n)+m+3*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0834(n,m,k) :
    return( binomial(n+k-1,n)*binomial(n+m+4*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0835(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(5*n+m+4*k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0836(n,m,k) :
    return( binomial(k,n)*binomial((-3*n)+m+4*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0837(n,m,k) :
    return( binomial(n+k-1,n)*binomial(2*n+m+3*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0838(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(5*n+m+3*k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0839(n,m,k) :
    return( binomial(k,n)*binomial((-n)+m+3*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0840(n,m,k) :
    return( (k*binomial(n+2*k,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0841(n,m,k) :
    return( (k*binomial(n+3*k,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0842(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(2*n+3*k,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0843(n,m,k) :
    return( (k*binomial(2*n+k-1,n)*binomial(2*n+4*k,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0844(n,m,k) :
    return( (k*binomial(n+m+2*k-1,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0845(n,m,k) :
    return( binomial((-n)+m+2*k-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0846(n,m,k) :
    return( (k*binomial(n+m+3*k-1,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0847(n,m,k) :
    return( binomial((-2*n)+m+3*k-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0848(n,m,k) :
    return( (k*binomial(n+m+4*k-1,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0849(n,m,k) :
    return( binomial((-3*n)+m+4*k-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0850(n,m,k) :
    return( binomial(n+2*k-1,n)*binomial(n+m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0851(n,m,k) :
    if n==0:
        return (binomial(m+k-1,m))
    return( (2*k*binomial(m+k-1,m)*(-1)**(n-1)*binomial(2*n-2*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0852(n,m,k) :
    if n==0 and m==0:
        return 1
    return( (2*k*(-1)**(n+m-1)*binomial(n+m,n)*binomial(2*n-2*k-1,n+m-1))/(n+m)  )
#----------------------------------------------------------------------------
def  Tuu0853(n,m,k) :
    return( binomial(n+2*k-1,n)*binomial(n+m+3*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0854(n,m,k) :
    if n==0:
        return (binomial(m+3*k-1,m))
    return( (2*k*binomial((-2*n)+m+3*k-1,m)*(-1)**(n-1)*binomial(2*n-2*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0855(n,m,k) :
    return( (k*binomial(n+k,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0856(n,m,k) :
    return( (k*binomial(2*k-n,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0857(n,m,k) :
    return( binomial(2*k-3*n,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0858(n,m,k) :
    return( binomial(k,n)*binomial(2*k-5*n,m)  )
#----------------------------------------------------------------------------
def  Tuu0859(n,m,k) :
    return( (k*binomial(n+2*k,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0860(n,m,k) :
    return( (k*binomial(n+3*k,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0861(n,m,k) :
    return( (k*binomial(3*k-2*n,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0862(n,m,k) :
    return( binomial(3*k-5*n,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0863(n,m,k) :
    return( binomial(k,n)*binomial(3*k-8*n,m)  )
#----------------------------------------------------------------------------
def  Tuu0864(n,m,k) :
    return( (k*binomial(n+m+k-1,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0865(n,m,k) :
    return( (k*binomial(n+2*(k-n)+m-1,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0866(n,m,k) :
    return( binomial((-3*n)+m+2*k-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0867(n,m,k) :
    return( binomial(k,n)*binomial((-5*n)+m+2*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0868(n,m,k) :
    return( (k*binomial(n+m+3*k-1,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0869(n,m,k) :
    return( (k*binomial((-2*n)+m+3*k-1,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0870(n,m,k) :
    return( binomial((-5*n)+m+3*k-1,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0871(n,m,k) :
    return( binomial(k,n)*binomial((-8*n)+m+3*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0872(n,m,k) :
    return( (k*binomial(2*n+k,m)*binomial(3*n+k-1,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0873(n,m,k) :
    return( (k*TA000984(m,n)*(binomial(3*n+k-1,n)))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0874(n,m,k) :
    return( (k*TA000984(m,n+k)*(binomial(3*n+k-1,n)))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0875(n,m,k) :
    return( (k*TA000984(m,n+2*k)*(binomial(3*n+k-1,n)))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0876(n,m,k) :
    return( (k*TA000984(m,n)*(binomial(2*n+k-1,n)))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0877(n,m,k) :
    return( (k*binomial(n+k,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0878(n,m,k) :
    return( Tsqrt(m,n)*binomial(2*n+2*k,n)*k/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0879(n,m,k) :
    return( binomial(2*k-n,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0880(n,m,k) :
    if n==0:
        return (binomial(2*k,m))
    return( (2*k*binomial(2*k-3*n,m)*(-1)**(n-1)*binomial(2*n-2*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0881(n,m,k) :
    return( (k*binomial(n+3*k,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0882(n,m,k) :
    return( binomial(n+3*(k-n),m)*binomial(3*n+2*(k-n)-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0883(n,m,k) :
    if n==0:
        return binomial(3*k,m)
    return( (2*k*binomial(3*k-5*n,m)*(-1)**(n-1)*binomial(2*n-2*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0884(n,m,k) :
    return( (k*binomial(2*n+k,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0885(n,m,k) :
    return( binomial(n+k,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0886(n,m,k) :
    if n==0:
        return binomial(k,m)
    return( (2*k*binomial(k,m)*(-1)**(n-1)*binomial(2*n-2*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0887(n,m,k) :
    return( (k*binomial(2*n+2*k,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0888(n,m,k) :
    return( (k*binomial(2*n+3*k,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0889(n,m,k) :
    return( binomial(3*k-n,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0890(n,m,k) :
    if n==0:
        return binomial(3*k,m)
    return( (2*k*binomial(3*k-4*n,m)*(-1)**(n-1)*binomial(2*n-2*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0891(n,m,k) :
    return( (k*binomial(n+m+k-1,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0892(n,m,k) :
    return( (k*binomial(n+m+2*k-1,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0893(n,m,k) :
    return( binomial((-n)+m+2*k-1,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0894(n,m,k) :
    if n==0:
        return binomial(2*k+m-1,m)
    return( (2*k*binomial((-3*n)+m+2*k-1,m)*(-1)**(n-1)*binomial(2*n-2*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0895(n,m,k) :
    return( (k*binomial(n+m+3*k-1,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0896(n,m,k) :
    return( binomial((-2*n)+m+3*k-1,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0897(n,m,k) :
    if n==0:
        return binomial(3*k+m-1,m)
    return( (2*k*binomial((-5*n)+m+3*k-1,m)*(-1)**(n-1)*binomial(2*n-2*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0898(n,m,k) :    
    return( (k*binomial(2*n+m+2*k-1,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0899(n,m,k) :
    return( (k*binomial(2*n+m+k-1,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0900(n,m,k) :
    return( (k*binomial(2*n+m+3*k-1,m)*binomial(3*n+2*k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0901(n,m,k) :
    return( binomial((-n)+m+3*k-1,m)*binomial(n+2*k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0902(n,m,k) :
    if n==0:
        return binomial(m+3*k-1,m)
    return( (2*k*binomial((-4*n)+m+3*k-1,m)*(-1)**(n-1)*binomial(2*n-2*k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0903(n,m,k) :
  if  2*n-k==0  :
    if  m==0  :
        return( 2  )
    else:
        return( 0  )
  else:
      return( (-k*(binomial(2*n-k,m))*(binomial(2*n-k,n)))/(2*n-k)  )
#----------------------------------------------------------------------------
def  Tuu0904(n,m,k) :
    return( binomial(k,m)*binomial(k,n)*2**(k-m)  )
#----------------------------------------------------------------------------
def  Tuu0905(n,m,k) :
    return( (k*2**(n-m+k)*binomial(n+k,m)*binomial(n+k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0906(n,m,k) :
    return( (k*2**(2*n-m+k)*binomial(2*n+k,m)*binomial(2*n+k,n))/(2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0907(n,m,k) :
  if  2*n-k==0  :
    if  m==0  :
        return( -2  )
    else:
        return( 0  )
  else:
      return( (-k*2**(2*n-m-k)*(binomial(2*n-k,m))*(binomial(2*n-k,n)))/(2*n-k)  )
#----------------------------------------------------------------------------
def  Tuu0908(n,m,k) :
    return( (k*2**n*binomial(n+m+k,m)*binomial(n+m+k,n))/(n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0909(n,m,k) :
  if  n==0  :
      return( (-1)**(m)*binomial(k,m)  )
  else:
      return( (-k*2**n*binomial(n+m-k,m)*binomial(n+m-k-1,n-1))/n  )
#----------------------------------------------------------------------------
def  Tuu0910(n,m,k) :
    return( binomial(k,m)*binomial(k,n)*2**m  )
#----------------------------------------------------------------------------
def  Tuu0911(n,m,k) :
    return( (k*2**m*binomial(n+k,m)*binomial(n+k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0912(n,m,k) :
    return( (k*2**m*binomial(m+k,m)*binomial(m+k,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0913(n,m,k) :
    return( (k*2**m*binomial(2*m+k,m)*binomial(2*m+k,n))/(2*m+k)  )
#----------------------------------------------------------------------------
def  Tuu0914(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( binomial(k-m-1,m-1)*binomial(k-m,n)*2**m*k/(m)  )
#----------------------------------------------------------------------------
def  Tuu0915(n,m,k) :
    return( (k*2**(m+k)*binomial(2*m+k-1,m)*(-1)**(n+m+k)*binomial(n+m-1,n))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0916(n,m,k) :
  if  m==0  :
      return( binomial(k,n)  )
  else:
      return( (k*binomial(-2*m+k-1,m-1)*binomial(k-2*m,n)*2**m)/m  )
#----------------------------------------------------------------------------
def  Tuu0917(n,m,k) :
    return( binomial(k,n)*2**m*binomial(m+k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0918(n,m,k) :
    return( (k*2**m*binomial(n+k,n)*binomial(n+m+k-1,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0919(n,m,k) :
    return( (k*2**m*binomial(m+k,n)*binomial(2*m+k-1,m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0920(n,m,k) :
  if  m==0 and n==0  :
      return( 2**(-k)  )
  else:
    if  m==0 and n>0  :
        return( 0  )
    else:
        return( -k*2**(m-k)*(binomial(m,n))*(binomial(2*m-k-1,m-1))/m  )
#----------------------------------------------------------------------------
def  Tuu0921(n,m,k) :
  if  n==0  :
      return( (-1)**m*binomial(m+k-1,m)  )
  else:
      return( (-k*((binomial(2*n-k-1,n-1))))/n*binomial(n-k,m)  )
#----------------------------------------------------------------------------
def  Tuu0922(n,m,k) :
  if  n==0  :
      return( (-1)**(m+k)*binomial(k,m)  )
  else:
      return( (-1)**(k-1)*(k*((binomial(2*n-k-1,n-1))))/n*binomial(m+n-k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0923(n,m,k) :
  if  n==0  :
      return( (-1)**m*binomial(m+2*k-1,m)  )
  else:
      return( (-k*binomial(2*n-2*k,m)*binomial(2*n-k-1,n-1))/(n)  )
#----------------------------------------------------------------------------
def  Tuu0924(n,m,k) :
    return( binomial(k,n)*Tsqrt2(m,k)  )
#----------------------------------------------------------------------------
def  Tuu0925(n,m,k) :
    return( k/(n+k)*binomial(n+k,n)*Tsqrt2(m,n+k)  )
#----------------------------------------------------------------------------
def  Tuu0926(n,m,k) :
    return( k/(2*n+k)*binomial(2*n+k,n)*Tsqrt2(m,2*n+k)  )
#----------------------------------------------------------------------------
def  Tuu0927(n,m,k) :
    return( k/(m+k)*binomial(k+m,n)*Tsqrt2(m,k+m)  )
#----------------------------------------------------------------------------
def  Tuu0928(n,m,k) :
    return( binomial(k-m,n)*Tsqrt(m,k)  )
#----------------------------------------------------------------------------
def  Tuu0929(n,m,k) :
    return( binomial(n+k-1,n)*Tsqrt2(m,k)  )
#----------------------------------------------------------------------------
def  Tuu0930(n,m,k) :
    return( k/(n+k)*binomial(2*n+k-1,n)*Tsqrt2(m,n+k)  )
#----------------------------------------------------------------------------
def  Tuu0931(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
    if  n==0  :
        return( 0  )
    else:
        return( -k/(n)*binomial(2*n-k-1,n-1)*Tsqrt2(m,n)  )
#----------------------------------------------------------------------------
def  Tuu0932(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
      return( binomial(k,n)*Tsqrt2(m,n)  )
#----------------------------------------------------------------------------
def  Tuu0933(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
      return( k/(n+k)*binomial(n+k,n)*Tsqrt2(m,n)  )
#----------------------------------------------------------------------------
def  Tuu0934(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
      return( k/(2*n+k)*binomial(2*n+k,n)*Tsqrt2(m,n)  )
#----------------------------------------------------------------------------
def  Tuu0935(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
      return( k/(m+k)*binomial(k+m,n)*Tsqrt2(m,n)  )
#----------------------------------------------------------------------------
def  Tuu0936(n,m,k) :
    return( binomial(n+m,m)*Tsqrt(n+m,k)  )
#----------------------------------------------------------------------------
def  Tuu0937(n,m,k) :
    return( k/(n+k)*binomial(n+m,m)*Tsqrt(n+m,n+k)  )
#----------------------------------------------------------------------------
def  Tuu0938(n,m,k) :
    return( k/(n+m+k)*binomial(n+m,m)*Tsqrt(n+m,n+m+k)  )
#----------------------------------------------------------------------------
def  Tuu0939(n,m,k) :
    return( binomial(n,m)*Tsqrt(n,k)  )
#----------------------------------------------------------------------------
def  Tuu0940(n,m,k) :
    return( k/(n+k)*binomial(n,m)*Tsqrt(n,n+k)  )
#----------------------------------------------------------------------------
def  Tuu0941(n,m,k) :
    return( k/(m+k)*binomial(n,m)*Tsqrt(n,m+k)  )
#----------------------------------------------------------------------------
def  Tuu0942(n,m,k) :
    return( binomial(k,n+m-2*k)*binomial(2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0943(n,m,k) :
    return( binomial(k,n+m-3*k)*binomial(3*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0944(n,m,k) :
    return( binomial(k,n+m-4*k)*binomial(4*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0945(n,m,k) :
  if  n+m<2*k  :
      return( 0  )
  else:
      return( binomial(2*k,m)*binomial(n+m-k-1,n+m-2*k)  )
#----------------------------------------------------------------------------
def  Tuu0946(n,m,k) :
  if  n+m < 3*k  :
      return( 0  )
  else:
      return( binomial(3*k,m)*binomial(n+m-k-1,n+m-3*k)  )
#----------------------------------------------------------------------------
def  Tuu0947(n,m,k) :
  if  n+m<4*k  :
      return( 0  )
  else:
      return( binomial(4*k,m)*binomial(n+m-k-1,n+m-4*k)  )
#----------------------------------------------------------------------------
def  Tuu0948(n,m,k) :
    return( (k*binomial(m+k,n-m-2*k)*binomial(2*(m+k),m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0949(n,m,k) :
    return( (k*binomial(2*m+2*k,m)*binomial(n+k-1,n-m))/(m+k)  )
#----------------------------------------------------------------------------
def  Tuu0950(n,m,k) :
    return( binomial(2*k,m)*binomial(2*k,n+m-2*k)  )
#----------------------------------------------------------------------------
def  Tuu0951(n,m,k) :
    return( binomial(k,m)*binomial(2*k,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0952(n,m,k) :
    return( binomial(k,m)*binomial(3*k,n+m-k)  )
#----------------------------------------------------------------------------
def  Tuu0953(n,m,k) :
  if  evenp(n+m)  :
      return( binomial(n+m,m)*binomial(k,int((n+m)/2))  )
  else:
      return( 0  )
#----------------------------------------------------------------------------
def  Tuu0954(n,m,k) :
  if  evenp(n+m)  :
      return( binomial(n+m,m)*binomial(int((n+m)/2)+k-1,int((n+m)/2))  )
  else:
      return( 0  )
#----------------------------------------------------------------------------
def  Tuu0955(n,m,k) :
  if  evenp(n+m)  :
      return( binomial(n+m,m)*binomial(int((n+m)/2)+2*k-1,int((n+m)/2))  )
  else:
      return( 0  )
#----------------------------------------------------------------------------
def  Tuu0956(n,m,k) :
  if  evenp(n+m)  :
      return( 2*k/(n+m+2*k)*binomial(n+m,m)*binomial((n+m)+k-1,int((n+m)/2))  )
  else:
      return( 0  )
#----------------------------------------------------------------------------
def  Tuu0957(n1,m1,k1) :
  if  evenp(n1+m1)  :
      #n1=(n+m)/2
      #n2=binomial(k,n1)
      #n3=binomial(n1,m)
      #return( n2*n3  )
      return( binomial(k,n).subs([(n,n1),(k,k1)])*binomial(n,m).subs([(m,m1),(n,n1)])  )
  else:
      return( 0  )
#----------------------------------------------------------------------------
def  Tuu0958(n1,m1,k1) :
    n2=n1+m1
    if  evenp(n2)  :
        n3=int(n2/2)
        n4=n1+k1
        return( int(k1/(n1+k1)*binomial(n,m).subs([(m,n3),(n,n4)])*binomial(n,m).subs([(m,m1),(n,n3)]))  )
    else:
        return( 0  )
#----------------------------------------------------------------------------
def  Tuu0959(n,m,k) :
  if  evenp(n+m)  :
      return( int(k/(m+k)*binomial(m+k,int((n+m)/2))*binomial(int((n+m)/2),m))  )
  else:
      return( 0  )
#----------------------------------------------------------------------------
def  Tuu0960(n,m,k) :
  if  evenp(n+m)  :
      return( int(k/(2*m+k)*binomial(2*m+k,int((n+m)/2))*binomial(int((n+m)/2),m))  )
  else:
      return( 0  )
#----------------------------------------------------------------------------
def  Tuu0961(n,m,k) :
  if  n==0 and m==0  :
      return( 1  )
  else:
    if  evenp(n+m)  :
        return( int(k*2*(-1)**(int((n+m+2)/2))/(n+m)*binomial(n+m,m)*binomial(n-k-1,int((n+m-2)/2)))  )
    else:
        return( 0  )
#----------------------------------------------------------------------------
def  Tuu0962(n,m,k) :
  if  evenp(n+m)  :
      return( int(k*2*(-1)**(int((n+2*k+m)/2))/(n+2*k+m)*binomial(n+2*k+m,m)*binomial(n+k-1,int((n+2*k+m-2)/2)))  )
  else:
      return( 0  )
#----------------------------------------------------------------------------
def  Tuu0963(n,m,k) :
  if  evenp(n+m)  :
      return( int(k*(n+k)/(n+m+k)*binomial(n+m+k,int((n+m)/2))*binomial(int((n+m)/2),m))  )
  else:
      return( 0  )
#----------------------------------------------------------------------------
def  Tuu0964(n,m,k) :
    return( int((binomial(k,int((n+m)/2))*((-1)**m+1)*binomial(int((n+m)/2),int(n/2))*((-1)**n+1))/4 ) )
#----------------------------------------------------------------------------
def  Tuu0965(n,m,k) :
    return( binomial(k,n)*kron_delta(m,n)  )
#----------------------------------------------------------------------------
def  Tuu0966(n,m,k) :
    return( binomial(k,n-m)*binomial(n-m,m)  )
#----------------------------------------------------------------------------
def  Tuu0967(n,m,k) :
    return( (k*binomial(n+k,n-m)*binomial(n-m,m))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0968(n,m,k) :
  if  n<m  :
      return( 0  )
  else:
    if  m==0  :
        return( (-1)**n*binomial(k,n)  )
    else:
        return( -k/m*binomial(n-m-1,m-1)*binomial(n-k-1,n-m-1)  )
#----------------------------------------------------------------------------
def  Tuu0969(n,m,k) :
    return( Tsqrt(n,k)*TA271825(m,k)  )
#----------------------------------------------------------------------------
def  Tuu0970(n,m,k) :
    return( Tsqrt(n,k)*TA271825(m,n)  )
#----------------------------------------------------------------------------
def  Tuu0971(n,m,k) :
    return( binomial(k,n)*Tsqrt(m,3*n)  )
#----------------------------------------------------------------------------
def  Tuu0972(n,m,k) :
    return( binomial(n+k-1,n)*Tsqrt(m,3*n)  )
#----------------------------------------------------------------------------
def  Tuu0973(n,m,k) :
    return( binomial(2*k,n)*Tsqrt(m,3*n)  )
#----------------------------------------------------------------------------
def  Tuu0974(n,m,k) :
    return( binomial(n+2*k-1,n)*Tsqrt(m,3*n)  )
#----------------------------------------------------------------------------
def  Tuu0975(n,m,k) :
    return( k/(n+k)*binomial(2*n+k-1,n)*Tsqrt(m,3*n)  )
#----------------------------------------------------------------------------
def  Tuu0976(n,m,k) :
    return( (k*(binomial(3*n+k-1,n)))/(2*n+k)*Tsqrt(m,n)  )
#----------------------------------------------------------------------------
def  Tuu0977(n,m,k) :
  if  n==0  :
      return( binomial(n,m)  )
  else:
      return( (k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n*binomial(n,m)  )
#----------------------------------------------------------------------------
def  Tuu0978(n,m,k) :
  if  n==0  :
      return( binomial(n+k,m)  )
  else:
      return( (k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n*binomial(n+k,m)  )
#----------------------------------------------------------------------------
def  Tuu0979(n,m,k) :
  if  n==0  :
      return( binomial(n-k,m)  )
  else:
      return( (k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n*binomial(n-k,m)  )
#----------------------------------------------------------------------------
def  Tuu0980(n,m,k) :
  if  n==0  :
      return( binomial(n-2*k,m)  )
  else:
      return( (k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n*binomial(n-2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0981(n,m,k) :
  if  n==0  :
      return( binomial(n+2*k,m)  )
  else:
      return( (k*((binomial(3*n-k-1,n-1))*(-1)**(n-1)))/n*binomial(n+2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0982(n,m,k) :
  if  n==0  :
      return( binomial(n-k,m)  )
  else:
      return( k*binomial(2*n-k-1,n-1)*(-1)**(n-1)/n*binomial(n-k,m)  )
#----------------------------------------------------------------------------
def  Tuu0983(n,m,k) :
  if  n==0  :
      return( binomial(n-2*k,m)  )
  else:
      return( k*binomial(2*n-k-1,n-1)*(-1)**(n-1)/n*binomial(n-2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0984(n,m,k) :
  if  n==0  :
      return( binomial(n+2*k,m)  )
  else:
      return( k*binomial(2*n-k-1,n-1)*(-1)**(n-1)/n*binomial(n+2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0985(n,m,k) :
    return( binomial(k,n)*binomial(n+2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0986(n,m,k) :
    return( binomial(k,n)*binomial(n-2*k,m)  )
#----------------------------------------------------------------------------
def  Tuu0987(n,m,k) :
    return( binomial(n-k,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0988(n,m,k) :
    return( binomial(n-2*k,m)*binomial(n+k-1,n)  )
#----------------------------------------------------------------------------
def  Tuu0989(n,m,k) :
    return( (k*binomial(n-k,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0990(n,m,k) :
    return( (k*binomial(n-2*k,m)*binomial(2*n+k-1,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0991(n,m,k) :
    return( (k*binomial(n+k,m)*binomial(2*n+2*k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0992(n,m,k) :
    return( (k*binomial(n+2*k,m)*binomial(2*n+2*k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0993(n,m,k) :
    return( (k*binomial(n-k,m)*binomial(2*n+2*k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0994(n,m,k) :
    return( (k*binomial(n-2*k,m)*binomial(2*n+2*k,n))/(n+k)  )
#----------------------------------------------------------------------------
def  Tuu0995(n,m,k) :
    return( TA000984(m,k)*binomial(m+2*k,n)  )
#----------------------------------------------------------------------------
def  Tuu0996(n,m,k) :
    return( TA000984(m,k)*binomial(m-k,n)  )
#----------------------------------------------------------------------------
def  Tuu0997(n,m,k) :
    return( TA000984(m,k)*binomial(m-2*k,n)  )
#----------------------------------------------------------------------------
def  Tuu0998(n,m,k) :
    return( binomial(n+k-1,n)*binomial(n+m-k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu0999(n,m,k) :
    return( binomial(n+k-1,n)*binomial(n+m-2*k-1,m)  )
#----------------------------------------------------------------------------
def  Tuu1000(n,m,k) :
  if  m==0  :
      return( binomial(n+k-1,n)  )
  else:
      return( binomial(n+k-1,n)*(n-k)*binomial(2*m+n-k-1,m-1)/m  )
#----------------------------------------------------------------------------
def  Tuu1001(n,m,k) :
  if  m==0  :
      return( binomial(n+k-1,n)  )
  else:
      return( binomial(n+k-1,n)*(n-2*k)*binomial(2*m+n-2*k-1,m-1)/m  )
